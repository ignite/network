// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package projectv1

import (
	_ "cosmossdk.io/api/amino"
	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_EventProjectCreated                     protoreflect.MessageDescriptor
	fd_EventProjectCreated_project_id          protoreflect.FieldDescriptor
	fd_EventProjectCreated_coordinator_address protoreflect.FieldDescriptor
	fd_EventProjectCreated_coordinator_id      protoreflect.FieldDescriptor
)

func init() {
	file_network_project_v1_events_proto_init()
	md_EventProjectCreated = File_network_project_v1_events_proto.Messages().ByName("EventProjectCreated")
	fd_EventProjectCreated_project_id = md_EventProjectCreated.Fields().ByName("project_id")
	fd_EventProjectCreated_coordinator_address = md_EventProjectCreated.Fields().ByName("coordinator_address")
	fd_EventProjectCreated_coordinator_id = md_EventProjectCreated.Fields().ByName("coordinator_id")
}

var _ protoreflect.Message = (*fastReflection_EventProjectCreated)(nil)

type fastReflection_EventProjectCreated EventProjectCreated

func (x *EventProjectCreated) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventProjectCreated)(x)
}

func (x *EventProjectCreated) slowProtoReflect() protoreflect.Message {
	mi := &file_network_project_v1_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventProjectCreated_messageType fastReflection_EventProjectCreated_messageType
var _ protoreflect.MessageType = fastReflection_EventProjectCreated_messageType{}

type fastReflection_EventProjectCreated_messageType struct{}

func (x fastReflection_EventProjectCreated_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventProjectCreated)(nil)
}
func (x fastReflection_EventProjectCreated_messageType) New() protoreflect.Message {
	return new(fastReflection_EventProjectCreated)
}
func (x fastReflection_EventProjectCreated_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectCreated
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventProjectCreated) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectCreated
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventProjectCreated) Type() protoreflect.MessageType {
	return _fastReflection_EventProjectCreated_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventProjectCreated) New() protoreflect.Message {
	return new(fastReflection_EventProjectCreated)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventProjectCreated) Interface() protoreflect.ProtoMessage {
	return (*EventProjectCreated)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventProjectCreated) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProjectId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProjectId)
		if !f(fd_EventProjectCreated_project_id, value) {
			return
		}
	}
	if x.CoordinatorAddress != "" {
		value := protoreflect.ValueOfString(x.CoordinatorAddress)
		if !f(fd_EventProjectCreated_coordinator_address, value) {
			return
		}
	}
	if x.CoordinatorId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CoordinatorId)
		if !f(fd_EventProjectCreated_coordinator_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventProjectCreated) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "network.project.v1.EventProjectCreated.project_id":
		return x.ProjectId != uint64(0)
	case "network.project.v1.EventProjectCreated.coordinator_address":
		return x.CoordinatorAddress != ""
	case "network.project.v1.EventProjectCreated.coordinator_id":
		return x.CoordinatorId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectCreated does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectCreated) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectCreated.project_id":
		x.ProjectId = uint64(0)
	case "network.project.v1.EventProjectCreated.coordinator_address":
		x.CoordinatorAddress = ""
	case "network.project.v1.EventProjectCreated.coordinator_id":
		x.CoordinatorId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectCreated does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventProjectCreated) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "network.project.v1.EventProjectCreated.project_id":
		value := x.ProjectId
		return protoreflect.ValueOfUint64(value)
	case "network.project.v1.EventProjectCreated.coordinator_address":
		value := x.CoordinatorAddress
		return protoreflect.ValueOfString(value)
	case "network.project.v1.EventProjectCreated.coordinator_id":
		value := x.CoordinatorId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectCreated does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectCreated) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectCreated.project_id":
		x.ProjectId = value.Uint()
	case "network.project.v1.EventProjectCreated.coordinator_address":
		x.CoordinatorAddress = value.Interface().(string)
	case "network.project.v1.EventProjectCreated.coordinator_id":
		x.CoordinatorId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectCreated does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectCreated) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectCreated.project_id":
		panic(fmt.Errorf("field project_id of message network.project.v1.EventProjectCreated is not mutable"))
	case "network.project.v1.EventProjectCreated.coordinator_address":
		panic(fmt.Errorf("field coordinator_address of message network.project.v1.EventProjectCreated is not mutable"))
	case "network.project.v1.EventProjectCreated.coordinator_id":
		panic(fmt.Errorf("field coordinator_id of message network.project.v1.EventProjectCreated is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectCreated does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventProjectCreated) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectCreated.project_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "network.project.v1.EventProjectCreated.coordinator_address":
		return protoreflect.ValueOfString("")
	case "network.project.v1.EventProjectCreated.coordinator_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectCreated does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventProjectCreated) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in network.project.v1.EventProjectCreated", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventProjectCreated) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectCreated) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventProjectCreated) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventProjectCreated) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventProjectCreated)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProjectId != 0 {
			n += 1 + runtime.Sov(uint64(x.ProjectId))
		}
		l = len(x.CoordinatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CoordinatorId != 0 {
			n += 1 + runtime.Sov(uint64(x.CoordinatorId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectCreated)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CoordinatorId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CoordinatorId))
			i--
			dAtA[i] = 0x18
		}
		if len(x.CoordinatorAddress) > 0 {
			i -= len(x.CoordinatorAddress)
			copy(dAtA[i:], x.CoordinatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CoordinatorAddress)))
			i--
			dAtA[i] = 0x12
		}
		if x.ProjectId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProjectId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectCreated)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectCreated: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectCreated: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
				}
				x.ProjectId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProjectId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CoordinatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CoordinatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CoordinatorId", wireType)
				}
				x.CoordinatorId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CoordinatorId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventProjectChainAdded            protoreflect.MessageDescriptor
	fd_EventProjectChainAdded_project_id protoreflect.FieldDescriptor
	fd_EventProjectChainAdded_launch_id  protoreflect.FieldDescriptor
)

func init() {
	file_network_project_v1_events_proto_init()
	md_EventProjectChainAdded = File_network_project_v1_events_proto.Messages().ByName("EventProjectChainAdded")
	fd_EventProjectChainAdded_project_id = md_EventProjectChainAdded.Fields().ByName("project_id")
	fd_EventProjectChainAdded_launch_id = md_EventProjectChainAdded.Fields().ByName("launch_id")
}

var _ protoreflect.Message = (*fastReflection_EventProjectChainAdded)(nil)

type fastReflection_EventProjectChainAdded EventProjectChainAdded

func (x *EventProjectChainAdded) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventProjectChainAdded)(x)
}

func (x *EventProjectChainAdded) slowProtoReflect() protoreflect.Message {
	mi := &file_network_project_v1_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventProjectChainAdded_messageType fastReflection_EventProjectChainAdded_messageType
var _ protoreflect.MessageType = fastReflection_EventProjectChainAdded_messageType{}

type fastReflection_EventProjectChainAdded_messageType struct{}

func (x fastReflection_EventProjectChainAdded_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventProjectChainAdded)(nil)
}
func (x fastReflection_EventProjectChainAdded_messageType) New() protoreflect.Message {
	return new(fastReflection_EventProjectChainAdded)
}
func (x fastReflection_EventProjectChainAdded_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectChainAdded
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventProjectChainAdded) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectChainAdded
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventProjectChainAdded) Type() protoreflect.MessageType {
	return _fastReflection_EventProjectChainAdded_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventProjectChainAdded) New() protoreflect.Message {
	return new(fastReflection_EventProjectChainAdded)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventProjectChainAdded) Interface() protoreflect.ProtoMessage {
	return (*EventProjectChainAdded)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventProjectChainAdded) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProjectId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProjectId)
		if !f(fd_EventProjectChainAdded_project_id, value) {
			return
		}
	}
	if x.LaunchId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.LaunchId)
		if !f(fd_EventProjectChainAdded_launch_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventProjectChainAdded) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "network.project.v1.EventProjectChainAdded.project_id":
		return x.ProjectId != uint64(0)
	case "network.project.v1.EventProjectChainAdded.launch_id":
		return x.LaunchId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectChainAdded"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectChainAdded does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectChainAdded) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectChainAdded.project_id":
		x.ProjectId = uint64(0)
	case "network.project.v1.EventProjectChainAdded.launch_id":
		x.LaunchId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectChainAdded"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectChainAdded does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventProjectChainAdded) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "network.project.v1.EventProjectChainAdded.project_id":
		value := x.ProjectId
		return protoreflect.ValueOfUint64(value)
	case "network.project.v1.EventProjectChainAdded.launch_id":
		value := x.LaunchId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectChainAdded"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectChainAdded does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectChainAdded) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectChainAdded.project_id":
		x.ProjectId = value.Uint()
	case "network.project.v1.EventProjectChainAdded.launch_id":
		x.LaunchId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectChainAdded"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectChainAdded does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectChainAdded) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectChainAdded.project_id":
		panic(fmt.Errorf("field project_id of message network.project.v1.EventProjectChainAdded is not mutable"))
	case "network.project.v1.EventProjectChainAdded.launch_id":
		panic(fmt.Errorf("field launch_id of message network.project.v1.EventProjectChainAdded is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectChainAdded"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectChainAdded does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventProjectChainAdded) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectChainAdded.project_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "network.project.v1.EventProjectChainAdded.launch_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectChainAdded"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectChainAdded does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventProjectChainAdded) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in network.project.v1.EventProjectChainAdded", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventProjectChainAdded) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectChainAdded) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventProjectChainAdded) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventProjectChainAdded) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventProjectChainAdded)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProjectId != 0 {
			n += 1 + runtime.Sov(uint64(x.ProjectId))
		}
		if x.LaunchId != 0 {
			n += 1 + runtime.Sov(uint64(x.LaunchId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectChainAdded)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.LaunchId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LaunchId))
			i--
			dAtA[i] = 0x10
		}
		if x.ProjectId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProjectId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectChainAdded)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectChainAdded: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectChainAdded: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
				}
				x.ProjectId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProjectId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LaunchId", wireType)
				}
				x.LaunchId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LaunchId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventProjectInfoUpdated                     protoreflect.MessageDescriptor
	fd_EventProjectInfoUpdated_project_id          protoreflect.FieldDescriptor
	fd_EventProjectInfoUpdated_coordinator_address protoreflect.FieldDescriptor
	fd_EventProjectInfoUpdated_project_name        protoreflect.FieldDescriptor
	fd_EventProjectInfoUpdated_metadata            protoreflect.FieldDescriptor
)

func init() {
	file_network_project_v1_events_proto_init()
	md_EventProjectInfoUpdated = File_network_project_v1_events_proto.Messages().ByName("EventProjectInfoUpdated")
	fd_EventProjectInfoUpdated_project_id = md_EventProjectInfoUpdated.Fields().ByName("project_id")
	fd_EventProjectInfoUpdated_coordinator_address = md_EventProjectInfoUpdated.Fields().ByName("coordinator_address")
	fd_EventProjectInfoUpdated_project_name = md_EventProjectInfoUpdated.Fields().ByName("project_name")
	fd_EventProjectInfoUpdated_metadata = md_EventProjectInfoUpdated.Fields().ByName("metadata")
}

var _ protoreflect.Message = (*fastReflection_EventProjectInfoUpdated)(nil)

type fastReflection_EventProjectInfoUpdated EventProjectInfoUpdated

func (x *EventProjectInfoUpdated) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventProjectInfoUpdated)(x)
}

func (x *EventProjectInfoUpdated) slowProtoReflect() protoreflect.Message {
	mi := &file_network_project_v1_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventProjectInfoUpdated_messageType fastReflection_EventProjectInfoUpdated_messageType
var _ protoreflect.MessageType = fastReflection_EventProjectInfoUpdated_messageType{}

type fastReflection_EventProjectInfoUpdated_messageType struct{}

func (x fastReflection_EventProjectInfoUpdated_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventProjectInfoUpdated)(nil)
}
func (x fastReflection_EventProjectInfoUpdated_messageType) New() protoreflect.Message {
	return new(fastReflection_EventProjectInfoUpdated)
}
func (x fastReflection_EventProjectInfoUpdated_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectInfoUpdated
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventProjectInfoUpdated) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectInfoUpdated
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventProjectInfoUpdated) Type() protoreflect.MessageType {
	return _fastReflection_EventProjectInfoUpdated_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventProjectInfoUpdated) New() protoreflect.Message {
	return new(fastReflection_EventProjectInfoUpdated)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventProjectInfoUpdated) Interface() protoreflect.ProtoMessage {
	return (*EventProjectInfoUpdated)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventProjectInfoUpdated) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProjectId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProjectId)
		if !f(fd_EventProjectInfoUpdated_project_id, value) {
			return
		}
	}
	if x.CoordinatorAddress != "" {
		value := protoreflect.ValueOfString(x.CoordinatorAddress)
		if !f(fd_EventProjectInfoUpdated_coordinator_address, value) {
			return
		}
	}
	if x.ProjectName != "" {
		value := protoreflect.ValueOfString(x.ProjectName)
		if !f(fd_EventProjectInfoUpdated_project_name, value) {
			return
		}
	}
	if len(x.Metadata) != 0 {
		value := protoreflect.ValueOfBytes(x.Metadata)
		if !f(fd_EventProjectInfoUpdated_metadata, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventProjectInfoUpdated) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "network.project.v1.EventProjectInfoUpdated.project_id":
		return x.ProjectId != uint64(0)
	case "network.project.v1.EventProjectInfoUpdated.coordinator_address":
		return x.CoordinatorAddress != ""
	case "network.project.v1.EventProjectInfoUpdated.project_name":
		return x.ProjectName != ""
	case "network.project.v1.EventProjectInfoUpdated.metadata":
		return len(x.Metadata) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectInfoUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectInfoUpdated does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectInfoUpdated) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectInfoUpdated.project_id":
		x.ProjectId = uint64(0)
	case "network.project.v1.EventProjectInfoUpdated.coordinator_address":
		x.CoordinatorAddress = ""
	case "network.project.v1.EventProjectInfoUpdated.project_name":
		x.ProjectName = ""
	case "network.project.v1.EventProjectInfoUpdated.metadata":
		x.Metadata = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectInfoUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectInfoUpdated does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventProjectInfoUpdated) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "network.project.v1.EventProjectInfoUpdated.project_id":
		value := x.ProjectId
		return protoreflect.ValueOfUint64(value)
	case "network.project.v1.EventProjectInfoUpdated.coordinator_address":
		value := x.CoordinatorAddress
		return protoreflect.ValueOfString(value)
	case "network.project.v1.EventProjectInfoUpdated.project_name":
		value := x.ProjectName
		return protoreflect.ValueOfString(value)
	case "network.project.v1.EventProjectInfoUpdated.metadata":
		value := x.Metadata
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectInfoUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectInfoUpdated does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectInfoUpdated) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectInfoUpdated.project_id":
		x.ProjectId = value.Uint()
	case "network.project.v1.EventProjectInfoUpdated.coordinator_address":
		x.CoordinatorAddress = value.Interface().(string)
	case "network.project.v1.EventProjectInfoUpdated.project_name":
		x.ProjectName = value.Interface().(string)
	case "network.project.v1.EventProjectInfoUpdated.metadata":
		x.Metadata = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectInfoUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectInfoUpdated does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectInfoUpdated) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectInfoUpdated.project_id":
		panic(fmt.Errorf("field project_id of message network.project.v1.EventProjectInfoUpdated is not mutable"))
	case "network.project.v1.EventProjectInfoUpdated.coordinator_address":
		panic(fmt.Errorf("field coordinator_address of message network.project.v1.EventProjectInfoUpdated is not mutable"))
	case "network.project.v1.EventProjectInfoUpdated.project_name":
		panic(fmt.Errorf("field project_name of message network.project.v1.EventProjectInfoUpdated is not mutable"))
	case "network.project.v1.EventProjectInfoUpdated.metadata":
		panic(fmt.Errorf("field metadata of message network.project.v1.EventProjectInfoUpdated is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectInfoUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectInfoUpdated does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventProjectInfoUpdated) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectInfoUpdated.project_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "network.project.v1.EventProjectInfoUpdated.coordinator_address":
		return protoreflect.ValueOfString("")
	case "network.project.v1.EventProjectInfoUpdated.project_name":
		return protoreflect.ValueOfString("")
	case "network.project.v1.EventProjectInfoUpdated.metadata":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectInfoUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectInfoUpdated does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventProjectInfoUpdated) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in network.project.v1.EventProjectInfoUpdated", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventProjectInfoUpdated) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectInfoUpdated) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventProjectInfoUpdated) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventProjectInfoUpdated) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventProjectInfoUpdated)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProjectId != 0 {
			n += 1 + runtime.Sov(uint64(x.ProjectId))
		}
		l = len(x.CoordinatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProjectName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Metadata)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectInfoUpdated)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Metadata) > 0 {
			i -= len(x.Metadata)
			copy(dAtA[i:], x.Metadata)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Metadata)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ProjectName) > 0 {
			i -= len(x.ProjectName)
			copy(dAtA[i:], x.ProjectName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProjectName)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.CoordinatorAddress) > 0 {
			i -= len(x.CoordinatorAddress)
			copy(dAtA[i:], x.CoordinatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CoordinatorAddress)))
			i--
			dAtA[i] = 0x12
		}
		if x.ProjectId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProjectId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectInfoUpdated)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectInfoUpdated: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectInfoUpdated: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
				}
				x.ProjectId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProjectId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CoordinatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CoordinatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProjectName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProjectName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Metadata = append(x.Metadata[:0], dAtA[iNdEx:postIndex]...)
				if x.Metadata == nil {
					x.Metadata = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventProjectSharesUpdated_3_list)(nil)

type _EventProjectSharesUpdated_3_list struct {
	list *[]*v1beta1.Coin
}

func (x *_EventProjectSharesUpdated_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventProjectSharesUpdated_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_EventProjectSharesUpdated_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_EventProjectSharesUpdated_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventProjectSharesUpdated_3_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_EventProjectSharesUpdated_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_EventProjectSharesUpdated_3_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_EventProjectSharesUpdated_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventProjectSharesUpdated                     protoreflect.MessageDescriptor
	fd_EventProjectSharesUpdated_project_id          protoreflect.FieldDescriptor
	fd_EventProjectSharesUpdated_coordinator_address protoreflect.FieldDescriptor
	fd_EventProjectSharesUpdated_allocated_shares    protoreflect.FieldDescriptor
)

func init() {
	file_network_project_v1_events_proto_init()
	md_EventProjectSharesUpdated = File_network_project_v1_events_proto.Messages().ByName("EventProjectSharesUpdated")
	fd_EventProjectSharesUpdated_project_id = md_EventProjectSharesUpdated.Fields().ByName("project_id")
	fd_EventProjectSharesUpdated_coordinator_address = md_EventProjectSharesUpdated.Fields().ByName("coordinator_address")
	fd_EventProjectSharesUpdated_allocated_shares = md_EventProjectSharesUpdated.Fields().ByName("allocated_shares")
}

var _ protoreflect.Message = (*fastReflection_EventProjectSharesUpdated)(nil)

type fastReflection_EventProjectSharesUpdated EventProjectSharesUpdated

func (x *EventProjectSharesUpdated) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventProjectSharesUpdated)(x)
}

func (x *EventProjectSharesUpdated) slowProtoReflect() protoreflect.Message {
	mi := &file_network_project_v1_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventProjectSharesUpdated_messageType fastReflection_EventProjectSharesUpdated_messageType
var _ protoreflect.MessageType = fastReflection_EventProjectSharesUpdated_messageType{}

type fastReflection_EventProjectSharesUpdated_messageType struct{}

func (x fastReflection_EventProjectSharesUpdated_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventProjectSharesUpdated)(nil)
}
func (x fastReflection_EventProjectSharesUpdated_messageType) New() protoreflect.Message {
	return new(fastReflection_EventProjectSharesUpdated)
}
func (x fastReflection_EventProjectSharesUpdated_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectSharesUpdated
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventProjectSharesUpdated) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectSharesUpdated
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventProjectSharesUpdated) Type() protoreflect.MessageType {
	return _fastReflection_EventProjectSharesUpdated_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventProjectSharesUpdated) New() protoreflect.Message {
	return new(fastReflection_EventProjectSharesUpdated)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventProjectSharesUpdated) Interface() protoreflect.ProtoMessage {
	return (*EventProjectSharesUpdated)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventProjectSharesUpdated) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProjectId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProjectId)
		if !f(fd_EventProjectSharesUpdated_project_id, value) {
			return
		}
	}
	if x.CoordinatorAddress != "" {
		value := protoreflect.ValueOfString(x.CoordinatorAddress)
		if !f(fd_EventProjectSharesUpdated_coordinator_address, value) {
			return
		}
	}
	if len(x.AllocatedShares) != 0 {
		value := protoreflect.ValueOfList(&_EventProjectSharesUpdated_3_list{list: &x.AllocatedShares})
		if !f(fd_EventProjectSharesUpdated_allocated_shares, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventProjectSharesUpdated) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "network.project.v1.EventProjectSharesUpdated.project_id":
		return x.ProjectId != uint64(0)
	case "network.project.v1.EventProjectSharesUpdated.coordinator_address":
		return x.CoordinatorAddress != ""
	case "network.project.v1.EventProjectSharesUpdated.allocated_shares":
		return len(x.AllocatedShares) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectSharesUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectSharesUpdated does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectSharesUpdated) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectSharesUpdated.project_id":
		x.ProjectId = uint64(0)
	case "network.project.v1.EventProjectSharesUpdated.coordinator_address":
		x.CoordinatorAddress = ""
	case "network.project.v1.EventProjectSharesUpdated.allocated_shares":
		x.AllocatedShares = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectSharesUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectSharesUpdated does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventProjectSharesUpdated) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "network.project.v1.EventProjectSharesUpdated.project_id":
		value := x.ProjectId
		return protoreflect.ValueOfUint64(value)
	case "network.project.v1.EventProjectSharesUpdated.coordinator_address":
		value := x.CoordinatorAddress
		return protoreflect.ValueOfString(value)
	case "network.project.v1.EventProjectSharesUpdated.allocated_shares":
		if len(x.AllocatedShares) == 0 {
			return protoreflect.ValueOfList(&_EventProjectSharesUpdated_3_list{})
		}
		listValue := &_EventProjectSharesUpdated_3_list{list: &x.AllocatedShares}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectSharesUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectSharesUpdated does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectSharesUpdated) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectSharesUpdated.project_id":
		x.ProjectId = value.Uint()
	case "network.project.v1.EventProjectSharesUpdated.coordinator_address":
		x.CoordinatorAddress = value.Interface().(string)
	case "network.project.v1.EventProjectSharesUpdated.allocated_shares":
		lv := value.List()
		clv := lv.(*_EventProjectSharesUpdated_3_list)
		x.AllocatedShares = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectSharesUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectSharesUpdated does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectSharesUpdated) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectSharesUpdated.allocated_shares":
		if x.AllocatedShares == nil {
			x.AllocatedShares = []*v1beta1.Coin{}
		}
		value := &_EventProjectSharesUpdated_3_list{list: &x.AllocatedShares}
		return protoreflect.ValueOfList(value)
	case "network.project.v1.EventProjectSharesUpdated.project_id":
		panic(fmt.Errorf("field project_id of message network.project.v1.EventProjectSharesUpdated is not mutable"))
	case "network.project.v1.EventProjectSharesUpdated.coordinator_address":
		panic(fmt.Errorf("field coordinator_address of message network.project.v1.EventProjectSharesUpdated is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectSharesUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectSharesUpdated does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventProjectSharesUpdated) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectSharesUpdated.project_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "network.project.v1.EventProjectSharesUpdated.coordinator_address":
		return protoreflect.ValueOfString("")
	case "network.project.v1.EventProjectSharesUpdated.allocated_shares":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_EventProjectSharesUpdated_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectSharesUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectSharesUpdated does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventProjectSharesUpdated) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in network.project.v1.EventProjectSharesUpdated", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventProjectSharesUpdated) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectSharesUpdated) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventProjectSharesUpdated) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventProjectSharesUpdated) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventProjectSharesUpdated)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProjectId != 0 {
			n += 1 + runtime.Sov(uint64(x.ProjectId))
		}
		l = len(x.CoordinatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.AllocatedShares) > 0 {
			for _, e := range x.AllocatedShares {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectSharesUpdated)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.AllocatedShares) > 0 {
			for iNdEx := len(x.AllocatedShares) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AllocatedShares[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.CoordinatorAddress) > 0 {
			i -= len(x.CoordinatorAddress)
			copy(dAtA[i:], x.CoordinatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CoordinatorAddress)))
			i--
			dAtA[i] = 0x12
		}
		if x.ProjectId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProjectId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectSharesUpdated)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectSharesUpdated: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectSharesUpdated: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
				}
				x.ProjectId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProjectId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CoordinatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CoordinatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AllocatedShares", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AllocatedShares = append(x.AllocatedShares, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AllocatedShares[len(x.AllocatedShares)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventProjectTotalSupplyUpdated_3_list)(nil)

type _EventProjectTotalSupplyUpdated_3_list struct {
	list *[]*v1beta1.Coin
}

func (x *_EventProjectTotalSupplyUpdated_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventProjectTotalSupplyUpdated_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_EventProjectTotalSupplyUpdated_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_EventProjectTotalSupplyUpdated_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventProjectTotalSupplyUpdated_3_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_EventProjectTotalSupplyUpdated_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_EventProjectTotalSupplyUpdated_3_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_EventProjectTotalSupplyUpdated_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventProjectTotalSupplyUpdated                     protoreflect.MessageDescriptor
	fd_EventProjectTotalSupplyUpdated_project_id          protoreflect.FieldDescriptor
	fd_EventProjectTotalSupplyUpdated_coordinator_address protoreflect.FieldDescriptor
	fd_EventProjectTotalSupplyUpdated_total_supply        protoreflect.FieldDescriptor
)

func init() {
	file_network_project_v1_events_proto_init()
	md_EventProjectTotalSupplyUpdated = File_network_project_v1_events_proto.Messages().ByName("EventProjectTotalSupplyUpdated")
	fd_EventProjectTotalSupplyUpdated_project_id = md_EventProjectTotalSupplyUpdated.Fields().ByName("project_id")
	fd_EventProjectTotalSupplyUpdated_coordinator_address = md_EventProjectTotalSupplyUpdated.Fields().ByName("coordinator_address")
	fd_EventProjectTotalSupplyUpdated_total_supply = md_EventProjectTotalSupplyUpdated.Fields().ByName("total_supply")
}

var _ protoreflect.Message = (*fastReflection_EventProjectTotalSupplyUpdated)(nil)

type fastReflection_EventProjectTotalSupplyUpdated EventProjectTotalSupplyUpdated

func (x *EventProjectTotalSupplyUpdated) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventProjectTotalSupplyUpdated)(x)
}

func (x *EventProjectTotalSupplyUpdated) slowProtoReflect() protoreflect.Message {
	mi := &file_network_project_v1_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventProjectTotalSupplyUpdated_messageType fastReflection_EventProjectTotalSupplyUpdated_messageType
var _ protoreflect.MessageType = fastReflection_EventProjectTotalSupplyUpdated_messageType{}

type fastReflection_EventProjectTotalSupplyUpdated_messageType struct{}

func (x fastReflection_EventProjectTotalSupplyUpdated_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventProjectTotalSupplyUpdated)(nil)
}
func (x fastReflection_EventProjectTotalSupplyUpdated_messageType) New() protoreflect.Message {
	return new(fastReflection_EventProjectTotalSupplyUpdated)
}
func (x fastReflection_EventProjectTotalSupplyUpdated_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectTotalSupplyUpdated
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventProjectTotalSupplyUpdated) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectTotalSupplyUpdated
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventProjectTotalSupplyUpdated) Type() protoreflect.MessageType {
	return _fastReflection_EventProjectTotalSupplyUpdated_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventProjectTotalSupplyUpdated) New() protoreflect.Message {
	return new(fastReflection_EventProjectTotalSupplyUpdated)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventProjectTotalSupplyUpdated) Interface() protoreflect.ProtoMessage {
	return (*EventProjectTotalSupplyUpdated)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventProjectTotalSupplyUpdated) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProjectId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProjectId)
		if !f(fd_EventProjectTotalSupplyUpdated_project_id, value) {
			return
		}
	}
	if x.CoordinatorAddress != "" {
		value := protoreflect.ValueOfString(x.CoordinatorAddress)
		if !f(fd_EventProjectTotalSupplyUpdated_coordinator_address, value) {
			return
		}
	}
	if len(x.TotalSupply) != 0 {
		value := protoreflect.ValueOfList(&_EventProjectTotalSupplyUpdated_3_list{list: &x.TotalSupply})
		if !f(fd_EventProjectTotalSupplyUpdated_total_supply, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventProjectTotalSupplyUpdated) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "network.project.v1.EventProjectTotalSupplyUpdated.project_id":
		return x.ProjectId != uint64(0)
	case "network.project.v1.EventProjectTotalSupplyUpdated.coordinator_address":
		return x.CoordinatorAddress != ""
	case "network.project.v1.EventProjectTotalSupplyUpdated.total_supply":
		return len(x.TotalSupply) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectTotalSupplyUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectTotalSupplyUpdated does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectTotalSupplyUpdated) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectTotalSupplyUpdated.project_id":
		x.ProjectId = uint64(0)
	case "network.project.v1.EventProjectTotalSupplyUpdated.coordinator_address":
		x.CoordinatorAddress = ""
	case "network.project.v1.EventProjectTotalSupplyUpdated.total_supply":
		x.TotalSupply = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectTotalSupplyUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectTotalSupplyUpdated does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventProjectTotalSupplyUpdated) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "network.project.v1.EventProjectTotalSupplyUpdated.project_id":
		value := x.ProjectId
		return protoreflect.ValueOfUint64(value)
	case "network.project.v1.EventProjectTotalSupplyUpdated.coordinator_address":
		value := x.CoordinatorAddress
		return protoreflect.ValueOfString(value)
	case "network.project.v1.EventProjectTotalSupplyUpdated.total_supply":
		if len(x.TotalSupply) == 0 {
			return protoreflect.ValueOfList(&_EventProjectTotalSupplyUpdated_3_list{})
		}
		listValue := &_EventProjectTotalSupplyUpdated_3_list{list: &x.TotalSupply}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectTotalSupplyUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectTotalSupplyUpdated does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectTotalSupplyUpdated) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectTotalSupplyUpdated.project_id":
		x.ProjectId = value.Uint()
	case "network.project.v1.EventProjectTotalSupplyUpdated.coordinator_address":
		x.CoordinatorAddress = value.Interface().(string)
	case "network.project.v1.EventProjectTotalSupplyUpdated.total_supply":
		lv := value.List()
		clv := lv.(*_EventProjectTotalSupplyUpdated_3_list)
		x.TotalSupply = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectTotalSupplyUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectTotalSupplyUpdated does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectTotalSupplyUpdated) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectTotalSupplyUpdated.total_supply":
		if x.TotalSupply == nil {
			x.TotalSupply = []*v1beta1.Coin{}
		}
		value := &_EventProjectTotalSupplyUpdated_3_list{list: &x.TotalSupply}
		return protoreflect.ValueOfList(value)
	case "network.project.v1.EventProjectTotalSupplyUpdated.project_id":
		panic(fmt.Errorf("field project_id of message network.project.v1.EventProjectTotalSupplyUpdated is not mutable"))
	case "network.project.v1.EventProjectTotalSupplyUpdated.coordinator_address":
		panic(fmt.Errorf("field coordinator_address of message network.project.v1.EventProjectTotalSupplyUpdated is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectTotalSupplyUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectTotalSupplyUpdated does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventProjectTotalSupplyUpdated) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectTotalSupplyUpdated.project_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "network.project.v1.EventProjectTotalSupplyUpdated.coordinator_address":
		return protoreflect.ValueOfString("")
	case "network.project.v1.EventProjectTotalSupplyUpdated.total_supply":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_EventProjectTotalSupplyUpdated_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectTotalSupplyUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectTotalSupplyUpdated does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventProjectTotalSupplyUpdated) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in network.project.v1.EventProjectTotalSupplyUpdated", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventProjectTotalSupplyUpdated) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectTotalSupplyUpdated) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventProjectTotalSupplyUpdated) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventProjectTotalSupplyUpdated) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventProjectTotalSupplyUpdated)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProjectId != 0 {
			n += 1 + runtime.Sov(uint64(x.ProjectId))
		}
		l = len(x.CoordinatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.TotalSupply) > 0 {
			for _, e := range x.TotalSupply {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectTotalSupplyUpdated)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.TotalSupply) > 0 {
			for iNdEx := len(x.TotalSupply) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TotalSupply[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.CoordinatorAddress) > 0 {
			i -= len(x.CoordinatorAddress)
			copy(dAtA[i:], x.CoordinatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CoordinatorAddress)))
			i--
			dAtA[i] = 0x12
		}
		if x.ProjectId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProjectId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectTotalSupplyUpdated)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectTotalSupplyUpdated: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectTotalSupplyUpdated: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
				}
				x.ProjectId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProjectId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CoordinatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CoordinatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalSupply", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalSupply = append(x.TotalSupply, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TotalSupply[len(x.TotalSupply)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventProjectMainnetInitialized                     protoreflect.MessageDescriptor
	fd_EventProjectMainnetInitialized_project_id          protoreflect.FieldDescriptor
	fd_EventProjectMainnetInitialized_coordinator_address protoreflect.FieldDescriptor
	fd_EventProjectMainnetInitialized_mainnet_id          protoreflect.FieldDescriptor
)

func init() {
	file_network_project_v1_events_proto_init()
	md_EventProjectMainnetInitialized = File_network_project_v1_events_proto.Messages().ByName("EventProjectMainnetInitialized")
	fd_EventProjectMainnetInitialized_project_id = md_EventProjectMainnetInitialized.Fields().ByName("project_id")
	fd_EventProjectMainnetInitialized_coordinator_address = md_EventProjectMainnetInitialized.Fields().ByName("coordinator_address")
	fd_EventProjectMainnetInitialized_mainnet_id = md_EventProjectMainnetInitialized.Fields().ByName("mainnet_id")
}

var _ protoreflect.Message = (*fastReflection_EventProjectMainnetInitialized)(nil)

type fastReflection_EventProjectMainnetInitialized EventProjectMainnetInitialized

func (x *EventProjectMainnetInitialized) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventProjectMainnetInitialized)(x)
}

func (x *EventProjectMainnetInitialized) slowProtoReflect() protoreflect.Message {
	mi := &file_network_project_v1_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventProjectMainnetInitialized_messageType fastReflection_EventProjectMainnetInitialized_messageType
var _ protoreflect.MessageType = fastReflection_EventProjectMainnetInitialized_messageType{}

type fastReflection_EventProjectMainnetInitialized_messageType struct{}

func (x fastReflection_EventProjectMainnetInitialized_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventProjectMainnetInitialized)(nil)
}
func (x fastReflection_EventProjectMainnetInitialized_messageType) New() protoreflect.Message {
	return new(fastReflection_EventProjectMainnetInitialized)
}
func (x fastReflection_EventProjectMainnetInitialized_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectMainnetInitialized
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventProjectMainnetInitialized) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectMainnetInitialized
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventProjectMainnetInitialized) Type() protoreflect.MessageType {
	return _fastReflection_EventProjectMainnetInitialized_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventProjectMainnetInitialized) New() protoreflect.Message {
	return new(fastReflection_EventProjectMainnetInitialized)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventProjectMainnetInitialized) Interface() protoreflect.ProtoMessage {
	return (*EventProjectMainnetInitialized)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventProjectMainnetInitialized) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProjectId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProjectId)
		if !f(fd_EventProjectMainnetInitialized_project_id, value) {
			return
		}
	}
	if x.CoordinatorAddress != "" {
		value := protoreflect.ValueOfString(x.CoordinatorAddress)
		if !f(fd_EventProjectMainnetInitialized_coordinator_address, value) {
			return
		}
	}
	if x.MainnetId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MainnetId)
		if !f(fd_EventProjectMainnetInitialized_mainnet_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventProjectMainnetInitialized) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "network.project.v1.EventProjectMainnetInitialized.project_id":
		return x.ProjectId != uint64(0)
	case "network.project.v1.EventProjectMainnetInitialized.coordinator_address":
		return x.CoordinatorAddress != ""
	case "network.project.v1.EventProjectMainnetInitialized.mainnet_id":
		return x.MainnetId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectMainnetInitialized"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectMainnetInitialized does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectMainnetInitialized) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectMainnetInitialized.project_id":
		x.ProjectId = uint64(0)
	case "network.project.v1.EventProjectMainnetInitialized.coordinator_address":
		x.CoordinatorAddress = ""
	case "network.project.v1.EventProjectMainnetInitialized.mainnet_id":
		x.MainnetId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectMainnetInitialized"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectMainnetInitialized does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventProjectMainnetInitialized) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "network.project.v1.EventProjectMainnetInitialized.project_id":
		value := x.ProjectId
		return protoreflect.ValueOfUint64(value)
	case "network.project.v1.EventProjectMainnetInitialized.coordinator_address":
		value := x.CoordinatorAddress
		return protoreflect.ValueOfString(value)
	case "network.project.v1.EventProjectMainnetInitialized.mainnet_id":
		value := x.MainnetId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectMainnetInitialized"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectMainnetInitialized does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectMainnetInitialized) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectMainnetInitialized.project_id":
		x.ProjectId = value.Uint()
	case "network.project.v1.EventProjectMainnetInitialized.coordinator_address":
		x.CoordinatorAddress = value.Interface().(string)
	case "network.project.v1.EventProjectMainnetInitialized.mainnet_id":
		x.MainnetId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectMainnetInitialized"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectMainnetInitialized does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectMainnetInitialized) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectMainnetInitialized.project_id":
		panic(fmt.Errorf("field project_id of message network.project.v1.EventProjectMainnetInitialized is not mutable"))
	case "network.project.v1.EventProjectMainnetInitialized.coordinator_address":
		panic(fmt.Errorf("field coordinator_address of message network.project.v1.EventProjectMainnetInitialized is not mutable"))
	case "network.project.v1.EventProjectMainnetInitialized.mainnet_id":
		panic(fmt.Errorf("field mainnet_id of message network.project.v1.EventProjectMainnetInitialized is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectMainnetInitialized"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectMainnetInitialized does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventProjectMainnetInitialized) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectMainnetInitialized.project_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "network.project.v1.EventProjectMainnetInitialized.coordinator_address":
		return protoreflect.ValueOfString("")
	case "network.project.v1.EventProjectMainnetInitialized.mainnet_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectMainnetInitialized"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectMainnetInitialized does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventProjectMainnetInitialized) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in network.project.v1.EventProjectMainnetInitialized", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventProjectMainnetInitialized) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectMainnetInitialized) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventProjectMainnetInitialized) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventProjectMainnetInitialized) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventProjectMainnetInitialized)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProjectId != 0 {
			n += 1 + runtime.Sov(uint64(x.ProjectId))
		}
		l = len(x.CoordinatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.MainnetId != 0 {
			n += 1 + runtime.Sov(uint64(x.MainnetId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectMainnetInitialized)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.MainnetId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MainnetId))
			i--
			dAtA[i] = 0x18
		}
		if len(x.CoordinatorAddress) > 0 {
			i -= len(x.CoordinatorAddress)
			copy(dAtA[i:], x.CoordinatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CoordinatorAddress)))
			i--
			dAtA[i] = 0x12
		}
		if x.ProjectId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProjectId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectMainnetInitialized)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectMainnetInitialized: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectMainnetInitialized: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
				}
				x.ProjectId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProjectId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CoordinatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CoordinatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MainnetId", wireType)
				}
				x.MainnetId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MainnetId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventMainnetAccountCreated_3_list)(nil)

type _EventMainnetAccountCreated_3_list struct {
	list *[]*v1beta1.Coin
}

func (x *_EventMainnetAccountCreated_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventMainnetAccountCreated_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_EventMainnetAccountCreated_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_EventMainnetAccountCreated_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventMainnetAccountCreated_3_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_EventMainnetAccountCreated_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_EventMainnetAccountCreated_3_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_EventMainnetAccountCreated_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventMainnetAccountCreated            protoreflect.MessageDescriptor
	fd_EventMainnetAccountCreated_project_id protoreflect.FieldDescriptor
	fd_EventMainnetAccountCreated_address    protoreflect.FieldDescriptor
	fd_EventMainnetAccountCreated_shares     protoreflect.FieldDescriptor
)

func init() {
	file_network_project_v1_events_proto_init()
	md_EventMainnetAccountCreated = File_network_project_v1_events_proto.Messages().ByName("EventMainnetAccountCreated")
	fd_EventMainnetAccountCreated_project_id = md_EventMainnetAccountCreated.Fields().ByName("project_id")
	fd_EventMainnetAccountCreated_address = md_EventMainnetAccountCreated.Fields().ByName("address")
	fd_EventMainnetAccountCreated_shares = md_EventMainnetAccountCreated.Fields().ByName("shares")
}

var _ protoreflect.Message = (*fastReflection_EventMainnetAccountCreated)(nil)

type fastReflection_EventMainnetAccountCreated EventMainnetAccountCreated

func (x *EventMainnetAccountCreated) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventMainnetAccountCreated)(x)
}

func (x *EventMainnetAccountCreated) slowProtoReflect() protoreflect.Message {
	mi := &file_network_project_v1_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventMainnetAccountCreated_messageType fastReflection_EventMainnetAccountCreated_messageType
var _ protoreflect.MessageType = fastReflection_EventMainnetAccountCreated_messageType{}

type fastReflection_EventMainnetAccountCreated_messageType struct{}

func (x fastReflection_EventMainnetAccountCreated_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventMainnetAccountCreated)(nil)
}
func (x fastReflection_EventMainnetAccountCreated_messageType) New() protoreflect.Message {
	return new(fastReflection_EventMainnetAccountCreated)
}
func (x fastReflection_EventMainnetAccountCreated_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventMainnetAccountCreated
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventMainnetAccountCreated) Descriptor() protoreflect.MessageDescriptor {
	return md_EventMainnetAccountCreated
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventMainnetAccountCreated) Type() protoreflect.MessageType {
	return _fastReflection_EventMainnetAccountCreated_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventMainnetAccountCreated) New() protoreflect.Message {
	return new(fastReflection_EventMainnetAccountCreated)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventMainnetAccountCreated) Interface() protoreflect.ProtoMessage {
	return (*EventMainnetAccountCreated)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventMainnetAccountCreated) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProjectId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProjectId)
		if !f(fd_EventMainnetAccountCreated_project_id, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_EventMainnetAccountCreated_address, value) {
			return
		}
	}
	if len(x.Shares) != 0 {
		value := protoreflect.ValueOfList(&_EventMainnetAccountCreated_3_list{list: &x.Shares})
		if !f(fd_EventMainnetAccountCreated_shares, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventMainnetAccountCreated) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountCreated.project_id":
		return x.ProjectId != uint64(0)
	case "network.project.v1.EventMainnetAccountCreated.address":
		return x.Address != ""
	case "network.project.v1.EventMainnetAccountCreated.shares":
		return len(x.Shares) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountCreated does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetAccountCreated) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountCreated.project_id":
		x.ProjectId = uint64(0)
	case "network.project.v1.EventMainnetAccountCreated.address":
		x.Address = ""
	case "network.project.v1.EventMainnetAccountCreated.shares":
		x.Shares = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountCreated does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventMainnetAccountCreated) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "network.project.v1.EventMainnetAccountCreated.project_id":
		value := x.ProjectId
		return protoreflect.ValueOfUint64(value)
	case "network.project.v1.EventMainnetAccountCreated.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "network.project.v1.EventMainnetAccountCreated.shares":
		if len(x.Shares) == 0 {
			return protoreflect.ValueOfList(&_EventMainnetAccountCreated_3_list{})
		}
		listValue := &_EventMainnetAccountCreated_3_list{list: &x.Shares}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountCreated does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetAccountCreated) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountCreated.project_id":
		x.ProjectId = value.Uint()
	case "network.project.v1.EventMainnetAccountCreated.address":
		x.Address = value.Interface().(string)
	case "network.project.v1.EventMainnetAccountCreated.shares":
		lv := value.List()
		clv := lv.(*_EventMainnetAccountCreated_3_list)
		x.Shares = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountCreated does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetAccountCreated) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountCreated.shares":
		if x.Shares == nil {
			x.Shares = []*v1beta1.Coin{}
		}
		value := &_EventMainnetAccountCreated_3_list{list: &x.Shares}
		return protoreflect.ValueOfList(value)
	case "network.project.v1.EventMainnetAccountCreated.project_id":
		panic(fmt.Errorf("field project_id of message network.project.v1.EventMainnetAccountCreated is not mutable"))
	case "network.project.v1.EventMainnetAccountCreated.address":
		panic(fmt.Errorf("field address of message network.project.v1.EventMainnetAccountCreated is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountCreated does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventMainnetAccountCreated) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountCreated.project_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "network.project.v1.EventMainnetAccountCreated.address":
		return protoreflect.ValueOfString("")
	case "network.project.v1.EventMainnetAccountCreated.shares":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_EventMainnetAccountCreated_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountCreated does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventMainnetAccountCreated) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in network.project.v1.EventMainnetAccountCreated", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventMainnetAccountCreated) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetAccountCreated) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventMainnetAccountCreated) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventMainnetAccountCreated) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventMainnetAccountCreated)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProjectId != 0 {
			n += 1 + runtime.Sov(uint64(x.ProjectId))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Shares) > 0 {
			for _, e := range x.Shares {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventMainnetAccountCreated)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Shares) > 0 {
			for iNdEx := len(x.Shares) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Shares[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if x.ProjectId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProjectId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventMainnetAccountCreated)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventMainnetAccountCreated: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventMainnetAccountCreated: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
				}
				x.ProjectId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProjectId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Shares", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Shares = append(x.Shares, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Shares[len(x.Shares)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EventMainnetAccountUpdated_3_list)(nil)

type _EventMainnetAccountUpdated_3_list struct {
	list *[]*v1beta1.Coin
}

func (x *_EventMainnetAccountUpdated_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EventMainnetAccountUpdated_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_EventMainnetAccountUpdated_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_EventMainnetAccountUpdated_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_EventMainnetAccountUpdated_3_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_EventMainnetAccountUpdated_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_EventMainnetAccountUpdated_3_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_EventMainnetAccountUpdated_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EventMainnetAccountUpdated            protoreflect.MessageDescriptor
	fd_EventMainnetAccountUpdated_project_id protoreflect.FieldDescriptor
	fd_EventMainnetAccountUpdated_address    protoreflect.FieldDescriptor
	fd_EventMainnetAccountUpdated_shares     protoreflect.FieldDescriptor
)

func init() {
	file_network_project_v1_events_proto_init()
	md_EventMainnetAccountUpdated = File_network_project_v1_events_proto.Messages().ByName("EventMainnetAccountUpdated")
	fd_EventMainnetAccountUpdated_project_id = md_EventMainnetAccountUpdated.Fields().ByName("project_id")
	fd_EventMainnetAccountUpdated_address = md_EventMainnetAccountUpdated.Fields().ByName("address")
	fd_EventMainnetAccountUpdated_shares = md_EventMainnetAccountUpdated.Fields().ByName("shares")
}

var _ protoreflect.Message = (*fastReflection_EventMainnetAccountUpdated)(nil)

type fastReflection_EventMainnetAccountUpdated EventMainnetAccountUpdated

func (x *EventMainnetAccountUpdated) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventMainnetAccountUpdated)(x)
}

func (x *EventMainnetAccountUpdated) slowProtoReflect() protoreflect.Message {
	mi := &file_network_project_v1_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventMainnetAccountUpdated_messageType fastReflection_EventMainnetAccountUpdated_messageType
var _ protoreflect.MessageType = fastReflection_EventMainnetAccountUpdated_messageType{}

type fastReflection_EventMainnetAccountUpdated_messageType struct{}

func (x fastReflection_EventMainnetAccountUpdated_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventMainnetAccountUpdated)(nil)
}
func (x fastReflection_EventMainnetAccountUpdated_messageType) New() protoreflect.Message {
	return new(fastReflection_EventMainnetAccountUpdated)
}
func (x fastReflection_EventMainnetAccountUpdated_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventMainnetAccountUpdated
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventMainnetAccountUpdated) Descriptor() protoreflect.MessageDescriptor {
	return md_EventMainnetAccountUpdated
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventMainnetAccountUpdated) Type() protoreflect.MessageType {
	return _fastReflection_EventMainnetAccountUpdated_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventMainnetAccountUpdated) New() protoreflect.Message {
	return new(fastReflection_EventMainnetAccountUpdated)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventMainnetAccountUpdated) Interface() protoreflect.ProtoMessage {
	return (*EventMainnetAccountUpdated)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventMainnetAccountUpdated) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProjectId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProjectId)
		if !f(fd_EventMainnetAccountUpdated_project_id, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_EventMainnetAccountUpdated_address, value) {
			return
		}
	}
	if len(x.Shares) != 0 {
		value := protoreflect.ValueOfList(&_EventMainnetAccountUpdated_3_list{list: &x.Shares})
		if !f(fd_EventMainnetAccountUpdated_shares, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventMainnetAccountUpdated) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountUpdated.project_id":
		return x.ProjectId != uint64(0)
	case "network.project.v1.EventMainnetAccountUpdated.address":
		return x.Address != ""
	case "network.project.v1.EventMainnetAccountUpdated.shares":
		return len(x.Shares) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountUpdated does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetAccountUpdated) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountUpdated.project_id":
		x.ProjectId = uint64(0)
	case "network.project.v1.EventMainnetAccountUpdated.address":
		x.Address = ""
	case "network.project.v1.EventMainnetAccountUpdated.shares":
		x.Shares = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountUpdated does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventMainnetAccountUpdated) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "network.project.v1.EventMainnetAccountUpdated.project_id":
		value := x.ProjectId
		return protoreflect.ValueOfUint64(value)
	case "network.project.v1.EventMainnetAccountUpdated.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "network.project.v1.EventMainnetAccountUpdated.shares":
		if len(x.Shares) == 0 {
			return protoreflect.ValueOfList(&_EventMainnetAccountUpdated_3_list{})
		}
		listValue := &_EventMainnetAccountUpdated_3_list{list: &x.Shares}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountUpdated does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetAccountUpdated) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountUpdated.project_id":
		x.ProjectId = value.Uint()
	case "network.project.v1.EventMainnetAccountUpdated.address":
		x.Address = value.Interface().(string)
	case "network.project.v1.EventMainnetAccountUpdated.shares":
		lv := value.List()
		clv := lv.(*_EventMainnetAccountUpdated_3_list)
		x.Shares = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountUpdated does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetAccountUpdated) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountUpdated.shares":
		if x.Shares == nil {
			x.Shares = []*v1beta1.Coin{}
		}
		value := &_EventMainnetAccountUpdated_3_list{list: &x.Shares}
		return protoreflect.ValueOfList(value)
	case "network.project.v1.EventMainnetAccountUpdated.project_id":
		panic(fmt.Errorf("field project_id of message network.project.v1.EventMainnetAccountUpdated is not mutable"))
	case "network.project.v1.EventMainnetAccountUpdated.address":
		panic(fmt.Errorf("field address of message network.project.v1.EventMainnetAccountUpdated is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountUpdated does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventMainnetAccountUpdated) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountUpdated.project_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "network.project.v1.EventMainnetAccountUpdated.address":
		return protoreflect.ValueOfString("")
	case "network.project.v1.EventMainnetAccountUpdated.shares":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_EventMainnetAccountUpdated_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountUpdated does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventMainnetAccountUpdated) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in network.project.v1.EventMainnetAccountUpdated", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventMainnetAccountUpdated) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetAccountUpdated) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventMainnetAccountUpdated) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventMainnetAccountUpdated) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventMainnetAccountUpdated)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProjectId != 0 {
			n += 1 + runtime.Sov(uint64(x.ProjectId))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Shares) > 0 {
			for _, e := range x.Shares {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventMainnetAccountUpdated)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Shares) > 0 {
			for iNdEx := len(x.Shares) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Shares[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if x.ProjectId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProjectId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventMainnetAccountUpdated)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventMainnetAccountUpdated: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventMainnetAccountUpdated: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
				}
				x.ProjectId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProjectId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Shares", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Shares = append(x.Shares, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Shares[len(x.Shares)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventMainnetAccountRemoved            protoreflect.MessageDescriptor
	fd_EventMainnetAccountRemoved_project_id protoreflect.FieldDescriptor
	fd_EventMainnetAccountRemoved_address    protoreflect.FieldDescriptor
)

func init() {
	file_network_project_v1_events_proto_init()
	md_EventMainnetAccountRemoved = File_network_project_v1_events_proto.Messages().ByName("EventMainnetAccountRemoved")
	fd_EventMainnetAccountRemoved_project_id = md_EventMainnetAccountRemoved.Fields().ByName("project_id")
	fd_EventMainnetAccountRemoved_address = md_EventMainnetAccountRemoved.Fields().ByName("address")
}

var _ protoreflect.Message = (*fastReflection_EventMainnetAccountRemoved)(nil)

type fastReflection_EventMainnetAccountRemoved EventMainnetAccountRemoved

func (x *EventMainnetAccountRemoved) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventMainnetAccountRemoved)(x)
}

func (x *EventMainnetAccountRemoved) slowProtoReflect() protoreflect.Message {
	mi := &file_network_project_v1_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventMainnetAccountRemoved_messageType fastReflection_EventMainnetAccountRemoved_messageType
var _ protoreflect.MessageType = fastReflection_EventMainnetAccountRemoved_messageType{}

type fastReflection_EventMainnetAccountRemoved_messageType struct{}

func (x fastReflection_EventMainnetAccountRemoved_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventMainnetAccountRemoved)(nil)
}
func (x fastReflection_EventMainnetAccountRemoved_messageType) New() protoreflect.Message {
	return new(fastReflection_EventMainnetAccountRemoved)
}
func (x fastReflection_EventMainnetAccountRemoved_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventMainnetAccountRemoved
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventMainnetAccountRemoved) Descriptor() protoreflect.MessageDescriptor {
	return md_EventMainnetAccountRemoved
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventMainnetAccountRemoved) Type() protoreflect.MessageType {
	return _fastReflection_EventMainnetAccountRemoved_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventMainnetAccountRemoved) New() protoreflect.Message {
	return new(fastReflection_EventMainnetAccountRemoved)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventMainnetAccountRemoved) Interface() protoreflect.ProtoMessage {
	return (*EventMainnetAccountRemoved)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventMainnetAccountRemoved) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProjectId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProjectId)
		if !f(fd_EventMainnetAccountRemoved_project_id, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_EventMainnetAccountRemoved_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventMainnetAccountRemoved) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountRemoved.project_id":
		return x.ProjectId != uint64(0)
	case "network.project.v1.EventMainnetAccountRemoved.address":
		return x.Address != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountRemoved"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountRemoved does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetAccountRemoved) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountRemoved.project_id":
		x.ProjectId = uint64(0)
	case "network.project.v1.EventMainnetAccountRemoved.address":
		x.Address = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountRemoved"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountRemoved does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventMainnetAccountRemoved) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "network.project.v1.EventMainnetAccountRemoved.project_id":
		value := x.ProjectId
		return protoreflect.ValueOfUint64(value)
	case "network.project.v1.EventMainnetAccountRemoved.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountRemoved"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountRemoved does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetAccountRemoved) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountRemoved.project_id":
		x.ProjectId = value.Uint()
	case "network.project.v1.EventMainnetAccountRemoved.address":
		x.Address = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountRemoved"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountRemoved does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetAccountRemoved) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountRemoved.project_id":
		panic(fmt.Errorf("field project_id of message network.project.v1.EventMainnetAccountRemoved is not mutable"))
	case "network.project.v1.EventMainnetAccountRemoved.address":
		panic(fmt.Errorf("field address of message network.project.v1.EventMainnetAccountRemoved is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountRemoved"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountRemoved does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventMainnetAccountRemoved) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetAccountRemoved.project_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "network.project.v1.EventMainnetAccountRemoved.address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetAccountRemoved"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetAccountRemoved does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventMainnetAccountRemoved) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in network.project.v1.EventMainnetAccountRemoved", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventMainnetAccountRemoved) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetAccountRemoved) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventMainnetAccountRemoved) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventMainnetAccountRemoved) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventMainnetAccountRemoved)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProjectId != 0 {
			n += 1 + runtime.Sov(uint64(x.ProjectId))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventMainnetAccountRemoved)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if x.ProjectId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProjectId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventMainnetAccountRemoved)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventMainnetAccountRemoved: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventMainnetAccountRemoved: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
				}
				x.ProjectId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProjectId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventMainnetVestingAccountCreated                 protoreflect.MessageDescriptor
	fd_EventMainnetVestingAccountCreated_project_id      protoreflect.FieldDescriptor
	fd_EventMainnetVestingAccountCreated_address         protoreflect.FieldDescriptor
	fd_EventMainnetVestingAccountCreated_vesting_options protoreflect.FieldDescriptor
)

func init() {
	file_network_project_v1_events_proto_init()
	md_EventMainnetVestingAccountCreated = File_network_project_v1_events_proto.Messages().ByName("EventMainnetVestingAccountCreated")
	fd_EventMainnetVestingAccountCreated_project_id = md_EventMainnetVestingAccountCreated.Fields().ByName("project_id")
	fd_EventMainnetVestingAccountCreated_address = md_EventMainnetVestingAccountCreated.Fields().ByName("address")
	fd_EventMainnetVestingAccountCreated_vesting_options = md_EventMainnetVestingAccountCreated.Fields().ByName("vesting_options")
}

var _ protoreflect.Message = (*fastReflection_EventMainnetVestingAccountCreated)(nil)

type fastReflection_EventMainnetVestingAccountCreated EventMainnetVestingAccountCreated

func (x *EventMainnetVestingAccountCreated) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventMainnetVestingAccountCreated)(x)
}

func (x *EventMainnetVestingAccountCreated) slowProtoReflect() protoreflect.Message {
	mi := &file_network_project_v1_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventMainnetVestingAccountCreated_messageType fastReflection_EventMainnetVestingAccountCreated_messageType
var _ protoreflect.MessageType = fastReflection_EventMainnetVestingAccountCreated_messageType{}

type fastReflection_EventMainnetVestingAccountCreated_messageType struct{}

func (x fastReflection_EventMainnetVestingAccountCreated_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventMainnetVestingAccountCreated)(nil)
}
func (x fastReflection_EventMainnetVestingAccountCreated_messageType) New() protoreflect.Message {
	return new(fastReflection_EventMainnetVestingAccountCreated)
}
func (x fastReflection_EventMainnetVestingAccountCreated_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventMainnetVestingAccountCreated
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventMainnetVestingAccountCreated) Descriptor() protoreflect.MessageDescriptor {
	return md_EventMainnetVestingAccountCreated
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventMainnetVestingAccountCreated) Type() protoreflect.MessageType {
	return _fastReflection_EventMainnetVestingAccountCreated_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventMainnetVestingAccountCreated) New() protoreflect.Message {
	return new(fastReflection_EventMainnetVestingAccountCreated)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventMainnetVestingAccountCreated) Interface() protoreflect.ProtoMessage {
	return (*EventMainnetVestingAccountCreated)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventMainnetVestingAccountCreated) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProjectId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProjectId)
		if !f(fd_EventMainnetVestingAccountCreated_project_id, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_EventMainnetVestingAccountCreated_address, value) {
			return
		}
	}
	if x.VestingOptions != nil {
		value := protoreflect.ValueOfMessage(x.VestingOptions.ProtoReflect())
		if !f(fd_EventMainnetVestingAccountCreated_vesting_options, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventMainnetVestingAccountCreated) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetVestingAccountCreated.project_id":
		return x.ProjectId != uint64(0)
	case "network.project.v1.EventMainnetVestingAccountCreated.address":
		return x.Address != ""
	case "network.project.v1.EventMainnetVestingAccountCreated.vesting_options":
		return x.VestingOptions != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetVestingAccountCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetVestingAccountCreated does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetVestingAccountCreated) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetVestingAccountCreated.project_id":
		x.ProjectId = uint64(0)
	case "network.project.v1.EventMainnetVestingAccountCreated.address":
		x.Address = ""
	case "network.project.v1.EventMainnetVestingAccountCreated.vesting_options":
		x.VestingOptions = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetVestingAccountCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetVestingAccountCreated does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventMainnetVestingAccountCreated) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "network.project.v1.EventMainnetVestingAccountCreated.project_id":
		value := x.ProjectId
		return protoreflect.ValueOfUint64(value)
	case "network.project.v1.EventMainnetVestingAccountCreated.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "network.project.v1.EventMainnetVestingAccountCreated.vesting_options":
		value := x.VestingOptions
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetVestingAccountCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetVestingAccountCreated does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetVestingAccountCreated) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetVestingAccountCreated.project_id":
		x.ProjectId = value.Uint()
	case "network.project.v1.EventMainnetVestingAccountCreated.address":
		x.Address = value.Interface().(string)
	case "network.project.v1.EventMainnetVestingAccountCreated.vesting_options":
		x.VestingOptions = value.Message().Interface().(*ShareVestingOptions)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetVestingAccountCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetVestingAccountCreated does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetVestingAccountCreated) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetVestingAccountCreated.vesting_options":
		if x.VestingOptions == nil {
			x.VestingOptions = new(ShareVestingOptions)
		}
		return protoreflect.ValueOfMessage(x.VestingOptions.ProtoReflect())
	case "network.project.v1.EventMainnetVestingAccountCreated.project_id":
		panic(fmt.Errorf("field project_id of message network.project.v1.EventMainnetVestingAccountCreated is not mutable"))
	case "network.project.v1.EventMainnetVestingAccountCreated.address":
		panic(fmt.Errorf("field address of message network.project.v1.EventMainnetVestingAccountCreated is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetVestingAccountCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetVestingAccountCreated does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventMainnetVestingAccountCreated) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetVestingAccountCreated.project_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "network.project.v1.EventMainnetVestingAccountCreated.address":
		return protoreflect.ValueOfString("")
	case "network.project.v1.EventMainnetVestingAccountCreated.vesting_options":
		m := new(ShareVestingOptions)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetVestingAccountCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetVestingAccountCreated does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventMainnetVestingAccountCreated) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in network.project.v1.EventMainnetVestingAccountCreated", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventMainnetVestingAccountCreated) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetVestingAccountCreated) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventMainnetVestingAccountCreated) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventMainnetVestingAccountCreated) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventMainnetVestingAccountCreated)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProjectId != 0 {
			n += 1 + runtime.Sov(uint64(x.ProjectId))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.VestingOptions != nil {
			l = options.Size(x.VestingOptions)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventMainnetVestingAccountCreated)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.VestingOptions != nil {
			encoded, err := options.Marshal(x.VestingOptions)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if x.ProjectId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProjectId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventMainnetVestingAccountCreated)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventMainnetVestingAccountCreated: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventMainnetVestingAccountCreated: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
				}
				x.ProjectId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProjectId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VestingOptions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.VestingOptions == nil {
					x.VestingOptions = &ShareVestingOptions{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VestingOptions); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventMainnetVestingAccountUpdated                 protoreflect.MessageDescriptor
	fd_EventMainnetVestingAccountUpdated_project_id      protoreflect.FieldDescriptor
	fd_EventMainnetVestingAccountUpdated_address         protoreflect.FieldDescriptor
	fd_EventMainnetVestingAccountUpdated_vesting_options protoreflect.FieldDescriptor
)

func init() {
	file_network_project_v1_events_proto_init()
	md_EventMainnetVestingAccountUpdated = File_network_project_v1_events_proto.Messages().ByName("EventMainnetVestingAccountUpdated")
	fd_EventMainnetVestingAccountUpdated_project_id = md_EventMainnetVestingAccountUpdated.Fields().ByName("project_id")
	fd_EventMainnetVestingAccountUpdated_address = md_EventMainnetVestingAccountUpdated.Fields().ByName("address")
	fd_EventMainnetVestingAccountUpdated_vesting_options = md_EventMainnetVestingAccountUpdated.Fields().ByName("vesting_options")
}

var _ protoreflect.Message = (*fastReflection_EventMainnetVestingAccountUpdated)(nil)

type fastReflection_EventMainnetVestingAccountUpdated EventMainnetVestingAccountUpdated

func (x *EventMainnetVestingAccountUpdated) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventMainnetVestingAccountUpdated)(x)
}

func (x *EventMainnetVestingAccountUpdated) slowProtoReflect() protoreflect.Message {
	mi := &file_network_project_v1_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventMainnetVestingAccountUpdated_messageType fastReflection_EventMainnetVestingAccountUpdated_messageType
var _ protoreflect.MessageType = fastReflection_EventMainnetVestingAccountUpdated_messageType{}

type fastReflection_EventMainnetVestingAccountUpdated_messageType struct{}

func (x fastReflection_EventMainnetVestingAccountUpdated_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventMainnetVestingAccountUpdated)(nil)
}
func (x fastReflection_EventMainnetVestingAccountUpdated_messageType) New() protoreflect.Message {
	return new(fastReflection_EventMainnetVestingAccountUpdated)
}
func (x fastReflection_EventMainnetVestingAccountUpdated_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventMainnetVestingAccountUpdated
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventMainnetVestingAccountUpdated) Descriptor() protoreflect.MessageDescriptor {
	return md_EventMainnetVestingAccountUpdated
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventMainnetVestingAccountUpdated) Type() protoreflect.MessageType {
	return _fastReflection_EventMainnetVestingAccountUpdated_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventMainnetVestingAccountUpdated) New() protoreflect.Message {
	return new(fastReflection_EventMainnetVestingAccountUpdated)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventMainnetVestingAccountUpdated) Interface() protoreflect.ProtoMessage {
	return (*EventMainnetVestingAccountUpdated)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventMainnetVestingAccountUpdated) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProjectId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProjectId)
		if !f(fd_EventMainnetVestingAccountUpdated_project_id, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_EventMainnetVestingAccountUpdated_address, value) {
			return
		}
	}
	if x.VestingOptions != nil {
		value := protoreflect.ValueOfMessage(x.VestingOptions.ProtoReflect())
		if !f(fd_EventMainnetVestingAccountUpdated_vesting_options, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventMainnetVestingAccountUpdated) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetVestingAccountUpdated.project_id":
		return x.ProjectId != uint64(0)
	case "network.project.v1.EventMainnetVestingAccountUpdated.address":
		return x.Address != ""
	case "network.project.v1.EventMainnetVestingAccountUpdated.vesting_options":
		return x.VestingOptions != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetVestingAccountUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetVestingAccountUpdated does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetVestingAccountUpdated) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetVestingAccountUpdated.project_id":
		x.ProjectId = uint64(0)
	case "network.project.v1.EventMainnetVestingAccountUpdated.address":
		x.Address = ""
	case "network.project.v1.EventMainnetVestingAccountUpdated.vesting_options":
		x.VestingOptions = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetVestingAccountUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetVestingAccountUpdated does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventMainnetVestingAccountUpdated) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "network.project.v1.EventMainnetVestingAccountUpdated.project_id":
		value := x.ProjectId
		return protoreflect.ValueOfUint64(value)
	case "network.project.v1.EventMainnetVestingAccountUpdated.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "network.project.v1.EventMainnetVestingAccountUpdated.vesting_options":
		value := x.VestingOptions
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetVestingAccountUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetVestingAccountUpdated does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetVestingAccountUpdated) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetVestingAccountUpdated.project_id":
		x.ProjectId = value.Uint()
	case "network.project.v1.EventMainnetVestingAccountUpdated.address":
		x.Address = value.Interface().(string)
	case "network.project.v1.EventMainnetVestingAccountUpdated.vesting_options":
		x.VestingOptions = value.Message().Interface().(*ShareVestingOptions)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetVestingAccountUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetVestingAccountUpdated does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetVestingAccountUpdated) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetVestingAccountUpdated.vesting_options":
		if x.VestingOptions == nil {
			x.VestingOptions = new(ShareVestingOptions)
		}
		return protoreflect.ValueOfMessage(x.VestingOptions.ProtoReflect())
	case "network.project.v1.EventMainnetVestingAccountUpdated.project_id":
		panic(fmt.Errorf("field project_id of message network.project.v1.EventMainnetVestingAccountUpdated is not mutable"))
	case "network.project.v1.EventMainnetVestingAccountUpdated.address":
		panic(fmt.Errorf("field address of message network.project.v1.EventMainnetVestingAccountUpdated is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetVestingAccountUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetVestingAccountUpdated does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventMainnetVestingAccountUpdated) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventMainnetVestingAccountUpdated.project_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "network.project.v1.EventMainnetVestingAccountUpdated.address":
		return protoreflect.ValueOfString("")
	case "network.project.v1.EventMainnetVestingAccountUpdated.vesting_options":
		m := new(ShareVestingOptions)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventMainnetVestingAccountUpdated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventMainnetVestingAccountUpdated does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventMainnetVestingAccountUpdated) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in network.project.v1.EventMainnetVestingAccountUpdated", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventMainnetVestingAccountUpdated) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventMainnetVestingAccountUpdated) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventMainnetVestingAccountUpdated) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventMainnetVestingAccountUpdated) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventMainnetVestingAccountUpdated)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProjectId != 0 {
			n += 1 + runtime.Sov(uint64(x.ProjectId))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.VestingOptions != nil {
			l = options.Size(x.VestingOptions)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventMainnetVestingAccountUpdated)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.VestingOptions != nil {
			encoded, err := options.Marshal(x.VestingOptions)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x12
		}
		if x.ProjectId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProjectId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventMainnetVestingAccountUpdated)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventMainnetVestingAccountUpdated: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventMainnetVestingAccountUpdated: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
				}
				x.ProjectId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProjectId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VestingOptions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.VestingOptions == nil {
					x.VestingOptions = &ShareVestingOptions{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VestingOptions); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EventProjectAuctionCreated            protoreflect.MessageDescriptor
	fd_EventProjectAuctionCreated_project_id protoreflect.FieldDescriptor
	fd_EventProjectAuctionCreated_auction_id protoreflect.FieldDescriptor
)

func init() {
	file_network_project_v1_events_proto_init()
	md_EventProjectAuctionCreated = File_network_project_v1_events_proto.Messages().ByName("EventProjectAuctionCreated")
	fd_EventProjectAuctionCreated_project_id = md_EventProjectAuctionCreated.Fields().ByName("project_id")
	fd_EventProjectAuctionCreated_auction_id = md_EventProjectAuctionCreated.Fields().ByName("auction_id")
}

var _ protoreflect.Message = (*fastReflection_EventProjectAuctionCreated)(nil)

type fastReflection_EventProjectAuctionCreated EventProjectAuctionCreated

func (x *EventProjectAuctionCreated) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EventProjectAuctionCreated)(x)
}

func (x *EventProjectAuctionCreated) slowProtoReflect() protoreflect.Message {
	mi := &file_network_project_v1_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EventProjectAuctionCreated_messageType fastReflection_EventProjectAuctionCreated_messageType
var _ protoreflect.MessageType = fastReflection_EventProjectAuctionCreated_messageType{}

type fastReflection_EventProjectAuctionCreated_messageType struct{}

func (x fastReflection_EventProjectAuctionCreated_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EventProjectAuctionCreated)(nil)
}
func (x fastReflection_EventProjectAuctionCreated_messageType) New() protoreflect.Message {
	return new(fastReflection_EventProjectAuctionCreated)
}
func (x fastReflection_EventProjectAuctionCreated_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectAuctionCreated
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EventProjectAuctionCreated) Descriptor() protoreflect.MessageDescriptor {
	return md_EventProjectAuctionCreated
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EventProjectAuctionCreated) Type() protoreflect.MessageType {
	return _fastReflection_EventProjectAuctionCreated_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EventProjectAuctionCreated) New() protoreflect.Message {
	return new(fastReflection_EventProjectAuctionCreated)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EventProjectAuctionCreated) Interface() protoreflect.ProtoMessage {
	return (*EventProjectAuctionCreated)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EventProjectAuctionCreated) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProjectId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ProjectId)
		if !f(fd_EventProjectAuctionCreated_project_id, value) {
			return
		}
	}
	if x.AuctionId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.AuctionId)
		if !f(fd_EventProjectAuctionCreated_auction_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EventProjectAuctionCreated) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "network.project.v1.EventProjectAuctionCreated.project_id":
		return x.ProjectId != uint64(0)
	case "network.project.v1.EventProjectAuctionCreated.auction_id":
		return x.AuctionId != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectAuctionCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectAuctionCreated does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectAuctionCreated) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectAuctionCreated.project_id":
		x.ProjectId = uint64(0)
	case "network.project.v1.EventProjectAuctionCreated.auction_id":
		x.AuctionId = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectAuctionCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectAuctionCreated does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EventProjectAuctionCreated) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "network.project.v1.EventProjectAuctionCreated.project_id":
		value := x.ProjectId
		return protoreflect.ValueOfUint64(value)
	case "network.project.v1.EventProjectAuctionCreated.auction_id":
		value := x.AuctionId
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectAuctionCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectAuctionCreated does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectAuctionCreated) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "network.project.v1.EventProjectAuctionCreated.project_id":
		x.ProjectId = value.Uint()
	case "network.project.v1.EventProjectAuctionCreated.auction_id":
		x.AuctionId = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectAuctionCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectAuctionCreated does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectAuctionCreated) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectAuctionCreated.project_id":
		panic(fmt.Errorf("field project_id of message network.project.v1.EventProjectAuctionCreated is not mutable"))
	case "network.project.v1.EventProjectAuctionCreated.auction_id":
		panic(fmt.Errorf("field auction_id of message network.project.v1.EventProjectAuctionCreated is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectAuctionCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectAuctionCreated does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EventProjectAuctionCreated) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "network.project.v1.EventProjectAuctionCreated.project_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "network.project.v1.EventProjectAuctionCreated.auction_id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: network.project.v1.EventProjectAuctionCreated"))
		}
		panic(fmt.Errorf("message network.project.v1.EventProjectAuctionCreated does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EventProjectAuctionCreated) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in network.project.v1.EventProjectAuctionCreated", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EventProjectAuctionCreated) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EventProjectAuctionCreated) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EventProjectAuctionCreated) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EventProjectAuctionCreated) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EventProjectAuctionCreated)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProjectId != 0 {
			n += 1 + runtime.Sov(uint64(x.ProjectId))
		}
		if x.AuctionId != 0 {
			n += 1 + runtime.Sov(uint64(x.AuctionId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectAuctionCreated)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AuctionId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.AuctionId))
			i--
			dAtA[i] = 0x10
		}
		if x.ProjectId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProjectId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EventProjectAuctionCreated)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectAuctionCreated: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EventProjectAuctionCreated: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
				}
				x.ProjectId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProjectId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AuctionId", wireType)
				}
				x.AuctionId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.AuctionId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: network/project/v1/events.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventProjectCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId          uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CoordinatorAddress string `protobuf:"bytes,2,opt,name=coordinator_address,json=coordinatorAddress,proto3" json:"coordinator_address,omitempty"`
	CoordinatorId      uint64 `protobuf:"varint,3,opt,name=coordinator_id,json=coordinatorId,proto3" json:"coordinator_id,omitempty"`
}

func (x *EventProjectCreated) Reset() {
	*x = EventProjectCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_project_v1_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventProjectCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventProjectCreated) ProtoMessage() {}

// Deprecated: Use EventProjectCreated.ProtoReflect.Descriptor instead.
func (*EventProjectCreated) Descriptor() ([]byte, []int) {
	return file_network_project_v1_events_proto_rawDescGZIP(), []int{0}
}

func (x *EventProjectCreated) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EventProjectCreated) GetCoordinatorAddress() string {
	if x != nil {
		return x.CoordinatorAddress
	}
	return ""
}

func (x *EventProjectCreated) GetCoordinatorId() uint64 {
	if x != nil {
		return x.CoordinatorId
	}
	return 0
}

type EventProjectChainAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	LaunchId  uint64 `protobuf:"varint,2,opt,name=launch_id,json=launchId,proto3" json:"launch_id,omitempty"`
}

func (x *EventProjectChainAdded) Reset() {
	*x = EventProjectChainAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_project_v1_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventProjectChainAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventProjectChainAdded) ProtoMessage() {}

// Deprecated: Use EventProjectChainAdded.ProtoReflect.Descriptor instead.
func (*EventProjectChainAdded) Descriptor() ([]byte, []int) {
	return file_network_project_v1_events_proto_rawDescGZIP(), []int{1}
}

func (x *EventProjectChainAdded) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EventProjectChainAdded) GetLaunchId() uint64 {
	if x != nil {
		return x.LaunchId
	}
	return 0
}

type EventProjectInfoUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId          uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CoordinatorAddress string `protobuf:"bytes,2,opt,name=coordinator_address,json=coordinatorAddress,proto3" json:"coordinator_address,omitempty"`
	ProjectName        string `protobuf:"bytes,3,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Metadata           []byte `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *EventProjectInfoUpdated) Reset() {
	*x = EventProjectInfoUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_project_v1_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventProjectInfoUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventProjectInfoUpdated) ProtoMessage() {}

// Deprecated: Use EventProjectInfoUpdated.ProtoReflect.Descriptor instead.
func (*EventProjectInfoUpdated) Descriptor() ([]byte, []int) {
	return file_network_project_v1_events_proto_rawDescGZIP(), []int{2}
}

func (x *EventProjectInfoUpdated) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EventProjectInfoUpdated) GetCoordinatorAddress() string {
	if x != nil {
		return x.CoordinatorAddress
	}
	return ""
}

func (x *EventProjectInfoUpdated) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *EventProjectInfoUpdated) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type EventProjectSharesUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId          uint64          `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CoordinatorAddress string          `protobuf:"bytes,2,opt,name=coordinator_address,json=coordinatorAddress,proto3" json:"coordinator_address,omitempty"`
	AllocatedShares    []*v1beta1.Coin `protobuf:"bytes,3,rep,name=allocated_shares,json=allocatedShares,proto3" json:"allocated_shares,omitempty"`
}

func (x *EventProjectSharesUpdated) Reset() {
	*x = EventProjectSharesUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_project_v1_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventProjectSharesUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventProjectSharesUpdated) ProtoMessage() {}

// Deprecated: Use EventProjectSharesUpdated.ProtoReflect.Descriptor instead.
func (*EventProjectSharesUpdated) Descriptor() ([]byte, []int) {
	return file_network_project_v1_events_proto_rawDescGZIP(), []int{3}
}

func (x *EventProjectSharesUpdated) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EventProjectSharesUpdated) GetCoordinatorAddress() string {
	if x != nil {
		return x.CoordinatorAddress
	}
	return ""
}

func (x *EventProjectSharesUpdated) GetAllocatedShares() []*v1beta1.Coin {
	if x != nil {
		return x.AllocatedShares
	}
	return nil
}

type EventProjectTotalSupplyUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId          uint64          `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CoordinatorAddress string          `protobuf:"bytes,2,opt,name=coordinator_address,json=coordinatorAddress,proto3" json:"coordinator_address,omitempty"`
	TotalSupply        []*v1beta1.Coin `protobuf:"bytes,3,rep,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
}

func (x *EventProjectTotalSupplyUpdated) Reset() {
	*x = EventProjectTotalSupplyUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_project_v1_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventProjectTotalSupplyUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventProjectTotalSupplyUpdated) ProtoMessage() {}

// Deprecated: Use EventProjectTotalSupplyUpdated.ProtoReflect.Descriptor instead.
func (*EventProjectTotalSupplyUpdated) Descriptor() ([]byte, []int) {
	return file_network_project_v1_events_proto_rawDescGZIP(), []int{4}
}

func (x *EventProjectTotalSupplyUpdated) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EventProjectTotalSupplyUpdated) GetCoordinatorAddress() string {
	if x != nil {
		return x.CoordinatorAddress
	}
	return ""
}

func (x *EventProjectTotalSupplyUpdated) GetTotalSupply() []*v1beta1.Coin {
	if x != nil {
		return x.TotalSupply
	}
	return nil
}

type EventProjectMainnetInitialized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId          uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CoordinatorAddress string `protobuf:"bytes,2,opt,name=coordinator_address,json=coordinatorAddress,proto3" json:"coordinator_address,omitempty"`
	MainnetId          uint64 `protobuf:"varint,3,opt,name=mainnet_id,json=mainnetId,proto3" json:"mainnet_id,omitempty"`
}

func (x *EventProjectMainnetInitialized) Reset() {
	*x = EventProjectMainnetInitialized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_project_v1_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventProjectMainnetInitialized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventProjectMainnetInitialized) ProtoMessage() {}

// Deprecated: Use EventProjectMainnetInitialized.ProtoReflect.Descriptor instead.
func (*EventProjectMainnetInitialized) Descriptor() ([]byte, []int) {
	return file_network_project_v1_events_proto_rawDescGZIP(), []int{5}
}

func (x *EventProjectMainnetInitialized) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EventProjectMainnetInitialized) GetCoordinatorAddress() string {
	if x != nil {
		return x.CoordinatorAddress
	}
	return ""
}

func (x *EventProjectMainnetInitialized) GetMainnetId() uint64 {
	if x != nil {
		return x.MainnetId
	}
	return 0
}

type EventMainnetAccountCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64          `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Address   string          `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Shares    []*v1beta1.Coin `protobuf:"bytes,3,rep,name=shares,proto3" json:"shares,omitempty"`
}

func (x *EventMainnetAccountCreated) Reset() {
	*x = EventMainnetAccountCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_project_v1_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMainnetAccountCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMainnetAccountCreated) ProtoMessage() {}

// Deprecated: Use EventMainnetAccountCreated.ProtoReflect.Descriptor instead.
func (*EventMainnetAccountCreated) Descriptor() ([]byte, []int) {
	return file_network_project_v1_events_proto_rawDescGZIP(), []int{6}
}

func (x *EventMainnetAccountCreated) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EventMainnetAccountCreated) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EventMainnetAccountCreated) GetShares() []*v1beta1.Coin {
	if x != nil {
		return x.Shares
	}
	return nil
}

type EventMainnetAccountUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64          `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Address   string          `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Shares    []*v1beta1.Coin `protobuf:"bytes,3,rep,name=shares,proto3" json:"shares,omitempty"`
}

func (x *EventMainnetAccountUpdated) Reset() {
	*x = EventMainnetAccountUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_project_v1_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMainnetAccountUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMainnetAccountUpdated) ProtoMessage() {}

// Deprecated: Use EventMainnetAccountUpdated.ProtoReflect.Descriptor instead.
func (*EventMainnetAccountUpdated) Descriptor() ([]byte, []int) {
	return file_network_project_v1_events_proto_rawDescGZIP(), []int{7}
}

func (x *EventMainnetAccountUpdated) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EventMainnetAccountUpdated) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EventMainnetAccountUpdated) GetShares() []*v1beta1.Coin {
	if x != nil {
		return x.Shares
	}
	return nil
}

type EventMainnetAccountRemoved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *EventMainnetAccountRemoved) Reset() {
	*x = EventMainnetAccountRemoved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_project_v1_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMainnetAccountRemoved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMainnetAccountRemoved) ProtoMessage() {}

// Deprecated: Use EventMainnetAccountRemoved.ProtoReflect.Descriptor instead.
func (*EventMainnetAccountRemoved) Descriptor() ([]byte, []int) {
	return file_network_project_v1_events_proto_rawDescGZIP(), []int{8}
}

func (x *EventMainnetAccountRemoved) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EventMainnetAccountRemoved) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type EventMainnetVestingAccountCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      uint64               `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Address        string               `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	VestingOptions *ShareVestingOptions `protobuf:"bytes,3,opt,name=vesting_options,json=vestingOptions,proto3" json:"vesting_options,omitempty"`
}

func (x *EventMainnetVestingAccountCreated) Reset() {
	*x = EventMainnetVestingAccountCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_project_v1_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMainnetVestingAccountCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMainnetVestingAccountCreated) ProtoMessage() {}

// Deprecated: Use EventMainnetVestingAccountCreated.ProtoReflect.Descriptor instead.
func (*EventMainnetVestingAccountCreated) Descriptor() ([]byte, []int) {
	return file_network_project_v1_events_proto_rawDescGZIP(), []int{9}
}

func (x *EventMainnetVestingAccountCreated) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EventMainnetVestingAccountCreated) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EventMainnetVestingAccountCreated) GetVestingOptions() *ShareVestingOptions {
	if x != nil {
		return x.VestingOptions
	}
	return nil
}

type EventMainnetVestingAccountUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      uint64               `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Address        string               `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	VestingOptions *ShareVestingOptions `protobuf:"bytes,3,opt,name=vesting_options,json=vestingOptions,proto3" json:"vesting_options,omitempty"`
}

func (x *EventMainnetVestingAccountUpdated) Reset() {
	*x = EventMainnetVestingAccountUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_project_v1_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMainnetVestingAccountUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMainnetVestingAccountUpdated) ProtoMessage() {}

// Deprecated: Use EventMainnetVestingAccountUpdated.ProtoReflect.Descriptor instead.
func (*EventMainnetVestingAccountUpdated) Descriptor() ([]byte, []int) {
	return file_network_project_v1_events_proto_rawDescGZIP(), []int{10}
}

func (x *EventMainnetVestingAccountUpdated) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EventMainnetVestingAccountUpdated) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EventMainnetVestingAccountUpdated) GetVestingOptions() *ShareVestingOptions {
	if x != nil {
		return x.VestingOptions
	}
	return nil
}

type EventProjectAuctionCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AuctionId uint64 `protobuf:"varint,2,opt,name=auction_id,json=auctionId,proto3" json:"auction_id,omitempty"`
}

func (x *EventProjectAuctionCreated) Reset() {
	*x = EventProjectAuctionCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_project_v1_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventProjectAuctionCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventProjectAuctionCreated) ProtoMessage() {}

// Deprecated: Use EventProjectAuctionCreated.ProtoReflect.Descriptor instead.
func (*EventProjectAuctionCreated) Descriptor() ([]byte, []int) {
	return file_network_project_v1_events_proto_rawDescGZIP(), []int{11}
}

func (x *EventProjectAuctionCreated) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *EventProjectAuctionCreated) GetAuctionId() uint64 {
	if x != nil {
		return x.AuctionId
	}
	return 0
}

var File_network_project_v1_events_proto protoreflect.FileDescriptor

var file_network_project_v1_events_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69,
	0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f,
	0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x01, 0x0a, 0x13,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x49, 0x0a, 0x13, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x16, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x17, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x13, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x9d, 0x02, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x13,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x12, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x4f, 0xc8,
	0xde, 0x1f, 0x00, 0xfa, 0xde, 0x1f, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d,
	0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0xaa, 0xdf,
	0x1f, 0x06, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x9a, 0xe7, 0xb0, 0x2a, 0x0c, 0x6c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x0f,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x22,
	0xbc, 0x02, 0x0a, 0x1e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x49, 0x0a, 0x13, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18,
	0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0xaf, 0x01, 0x0a,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x71,
	0xc8, 0xde, 0x1f, 0x00, 0xfa, 0xde, 0x1f, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0xaa,
	0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x9a, 0xe7, 0xb0, 0x2a, 0x0c,
	0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0xa8, 0xe7, 0xb0, 0x2a,
	0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x22, 0xa9,
	0x01, 0x0a, 0x1e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x61, 0x69, 0x6e, 0x6e, 0x65, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x49, 0x0a, 0x13, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2,
	0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x61, 0x69, 0x6e, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x6d, 0x61, 0x69, 0x6e, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x1a, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x6e, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x82, 0x01, 0x0a,
	0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x4f, 0xc8, 0xde, 0x1f, 0x00, 0xfa, 0xde,
	0x1f, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0xaa, 0xdf, 0x1f, 0x06, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x9a, 0xe7, 0xb0, 0x2a, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63,
	0x6f, 0x69, 0x6e, 0x73, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x22, 0xf4, 0x01, 0x0a, 0x1a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x6e,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42,
	0x4f, 0xc8, 0xde, 0x1f, 0x00, 0xfa, 0xde, 0x1f, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0xaa, 0xdf, 0x1f, 0x06, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x9a, 0xe7, 0xb0, 0x2a, 0x0c, 0x6c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x22, 0x6f, 0x0a, 0x1a, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4d, 0x61, 0x69, 0x6e, 0x6e, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x21, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x6e, 0x65, 0x74, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x56, 0x0a, 0x0f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0e, 0x76, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x21, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x6e, 0x65, 0x74, 0x56, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x56, 0x0a, 0x0f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0e, 0x76, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5a, 0x0a, 0x1a, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0xcb, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x76, 0x31, 0x42, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x67,
	0x6e, 0x69, 0x74, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x4e, 0x50, 0x58, 0xaa, 0x02, 0x12, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x14, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_network_project_v1_events_proto_rawDescOnce sync.Once
	file_network_project_v1_events_proto_rawDescData = file_network_project_v1_events_proto_rawDesc
)

func file_network_project_v1_events_proto_rawDescGZIP() []byte {
	file_network_project_v1_events_proto_rawDescOnce.Do(func() {
		file_network_project_v1_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_network_project_v1_events_proto_rawDescData)
	})
	return file_network_project_v1_events_proto_rawDescData
}

var file_network_project_v1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_network_project_v1_events_proto_goTypes = []interface{}{
	(*EventProjectCreated)(nil),               // 0: network.project.v1.EventProjectCreated
	(*EventProjectChainAdded)(nil),            // 1: network.project.v1.EventProjectChainAdded
	(*EventProjectInfoUpdated)(nil),           // 2: network.project.v1.EventProjectInfoUpdated
	(*EventProjectSharesUpdated)(nil),         // 3: network.project.v1.EventProjectSharesUpdated
	(*EventProjectTotalSupplyUpdated)(nil),    // 4: network.project.v1.EventProjectTotalSupplyUpdated
	(*EventProjectMainnetInitialized)(nil),    // 5: network.project.v1.EventProjectMainnetInitialized
	(*EventMainnetAccountCreated)(nil),        // 6: network.project.v1.EventMainnetAccountCreated
	(*EventMainnetAccountUpdated)(nil),        // 7: network.project.v1.EventMainnetAccountUpdated
	(*EventMainnetAccountRemoved)(nil),        // 8: network.project.v1.EventMainnetAccountRemoved
	(*EventMainnetVestingAccountCreated)(nil), // 9: network.project.v1.EventMainnetVestingAccountCreated
	(*EventMainnetVestingAccountUpdated)(nil), // 10: network.project.v1.EventMainnetVestingAccountUpdated
	(*EventProjectAuctionCreated)(nil),        // 11: network.project.v1.EventProjectAuctionCreated
	(*v1beta1.Coin)(nil),                      // 12: cosmos.base.v1beta1.Coin
	(*ShareVestingOptions)(nil),               // 13: network.project.v1.ShareVestingOptions
}
var file_network_project_v1_events_proto_depIdxs = []int32{
	12, // 0: network.project.v1.EventProjectSharesUpdated.allocated_shares:type_name -> cosmos.base.v1beta1.Coin
	12, // 1: network.project.v1.EventProjectTotalSupplyUpdated.total_supply:type_name -> cosmos.base.v1beta1.Coin
	12, // 2: network.project.v1.EventMainnetAccountCreated.shares:type_name -> cosmos.base.v1beta1.Coin
	12, // 3: network.project.v1.EventMainnetAccountUpdated.shares:type_name -> cosmos.base.v1beta1.Coin
	13, // 4: network.project.v1.EventMainnetVestingAccountCreated.vesting_options:type_name -> network.project.v1.ShareVestingOptions
	13, // 5: network.project.v1.EventMainnetVestingAccountUpdated.vesting_options:type_name -> network.project.v1.ShareVestingOptions
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_network_project_v1_events_proto_init() }
func file_network_project_v1_events_proto_init() {
	if File_network_project_v1_events_proto != nil {
		return
	}
	file_network_project_v1_vesting_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_network_project_v1_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventProjectCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_project_v1_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventProjectChainAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_project_v1_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventProjectInfoUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_project_v1_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventProjectSharesUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_project_v1_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventProjectTotalSupplyUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_project_v1_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventProjectMainnetInitialized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_project_v1_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMainnetAccountCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_project_v1_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMainnetAccountUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_project_v1_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMainnetAccountRemoved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_project_v1_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMainnetVestingAccountCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_project_v1_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMainnetVestingAccountUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_project_v1_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventProjectAuctionCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_network_project_v1_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_network_project_v1_events_proto_goTypes,
		DependencyIndexes: file_network_project_v1_events_proto_depIdxs,
		MessageInfos:      file_network_project_v1_events_proto_msgTypes,
	}.Build()
	File_network_project_v1_events_proto = out.File
	file_network_project_v1_events_proto_rawDesc = nil
	file_network_project_v1_events_proto_goTypes = nil
	file_network_project_v1_events_proto_depIdxs = nil
}
