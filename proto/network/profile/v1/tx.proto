syntax = "proto3";

package network.profile.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "network/profile/v1/coordinator.proto";
import "network/profile/v1/params.proto";
import "network/profile/v1/validator.proto";

option go_package = "github.com/ignite/network/x/profile/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc UpdateValidatorDescription(MsgUpdateValidatorDescription) returns (MsgUpdateValidatorDescriptionResponse);
  rpc AddValidatorOperatorAddress(MsgAddValidatorOperatorAddress) returns (MsgAddValidatorOperatorAddressResponse);
  rpc CreateCoordinator(MsgCreateCoordinator) returns (MsgCreateCoordinatorResponse);
  rpc UpdateCoordinatorDescription(MsgUpdateCoordinatorDescription) returns (MsgUpdateCoordinatorDescriptionResponse);
  rpc UpdateCoordinatorAddress(MsgUpdateCoordinatorAddress) returns (MsgUpdateCoordinatorAddressResponse);
  rpc DisableCoordinator(MsgDisableCoordinator) returns (MsgDisableCoordinatorResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "network/x/profile/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgUpdateValidatorDescription {
  option (cosmos.msg.v1.signer) = "address";
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  ValidatorDescription description = 2 [(gogoproto.nullable) = false];
}

message MsgUpdateValidatorDescriptionResponse {}

message MsgAddValidatorOperatorAddress {
  string validator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string operator_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgAddValidatorOperatorAddressResponse {}

message MsgCreateCoordinator {
  option (cosmos.msg.v1.signer) = "address";
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string identity = 2;
  string website = 3;
  string details = 4;
}

message MsgCreateCoordinatorResponse {
  uint64 coordinator_id = 1;
}

message MsgUpdateCoordinatorDescription {
  option (cosmos.msg.v1.signer) = "address";
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string identity = 2;
  string website = 3;
  string details = 4;
}

message MsgUpdateCoordinatorDescriptionResponse {}

message MsgUpdateCoordinatorAddress {
  option (cosmos.msg.v1.signer) = "address";
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string new_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgUpdateCoordinatorAddressResponse {}

message MsgDisableCoordinator {
  option (cosmos.msg.v1.signer) = "address";
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgDisableCoordinatorResponse {
  uint64 coordinator_id = 1;
}
