syntax = "proto3";

package network.participation.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "network/participation/v1/params.proto";

option go_package = "github.com/ignite/network/x/participation/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc Participate(MsgParticipate) returns (MsgParticipateResponse);
  rpc WithdrawAllocations(MsgWithdrawAllocations) returns (MsgWithdrawAllocationsResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "network/x/participation/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgParticipate {
  option (cosmos.msg.v1.signer) = "participant";
  string participant = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 auction_id = 2;
  uint64 tier_id = 3;
}

message MsgParticipateResponse {}

message MsgWithdrawAllocations {
  option (cosmos.msg.v1.signer) = "participant";
  string participant = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 auction_id = 2;
}

message MsgWithdrawAllocationsResponse {}
