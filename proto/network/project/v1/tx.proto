syntax = "proto3";

package network.project.v1;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "network/project/v1/params.proto";
import "network/project/v1/special_allocations.proto";

option go_package = "github.com/ignite/network/x/project/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc CreateProject(MsgCreateProject) returns (MsgCreateProjectResponse);
  rpc EditProject(MsgEditProject) returns (MsgEditProjectResponse);
  rpc UpdateTotalSupply(MsgUpdateTotalSupply) returns (MsgUpdateTotalSupplyResponse);
  rpc UpdateSpecialAllocations(MsgUpdateSpecialAllocations) returns (MsgUpdateSpecialAllocationsResponse);
  rpc InitializeMainnet(MsgInitializeMainnet) returns (MsgInitializeMainnetResponse);
  rpc MintVouchers(MsgMintVouchers) returns (MsgMintVouchersResponse);
  rpc BurnVouchers(MsgBurnVouchers) returns (MsgBurnVouchersResponse);
  rpc RedeemVouchers(MsgRedeemVouchers) returns (MsgRedeemVouchersResponse);
  rpc UnredeemVouchers(MsgUnredeemVouchers) returns (MsgUnredeemVouchersResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "network/x/project/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateProject {
  option (cosmos.msg.v1.signer) = "coordinator";
  string coordinator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string project_name = 2;
  repeated cosmos.base.v1beta1.Coin total_supply = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  bytes metadata = 4;
}

message MsgCreateProjectResponse {
  uint64 project_id = 1;
}

message MsgEditProject {
  option (cosmos.msg.v1.signer) = "coordinator";
  string coordinator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 project_id = 2;
  string name = 3;
  bytes metadata = 4;
}

message MsgEditProjectResponse {}

message MsgUpdateTotalSupply {
  option (cosmos.msg.v1.signer) = "coordinator";
  string coordinator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 project_id = 2;
  repeated cosmos.base.v1beta1.Coin total_supply_update = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgUpdateTotalSupplyResponse {}

message MsgUpdateSpecialAllocations {
  option (cosmos.msg.v1.signer) = "coordinator";
  string coordinator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 project_id = 2;
  SpecialAllocations special_allocations = 3 [(gogoproto.nullable) = false];
}

message MsgUpdateSpecialAllocationsResponse {}

message MsgInitializeMainnet {
  option (cosmos.msg.v1.signer) = "coordinator";
  string coordinator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 project_id = 2;
  string source_url = 3;
  string source_hash = 4;
  string mainnet_chain_id = 5;
}

message MsgInitializeMainnetResponse {
  uint64 mainnet_id = 1;
}

message MsgMintVouchers {
  option (cosmos.msg.v1.signer) = "coordinator";
  string coordinator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 project_id = 2;
  repeated cosmos.base.v1beta1.Coin shares = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "Shares"
  ];
}

message MsgMintVouchersResponse {}

message MsgBurnVouchers {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 project_id = 2;
  repeated cosmos.base.v1beta1.Coin vouchers = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgBurnVouchersResponse {}

message MsgRedeemVouchers {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 project_id = 2;
  string account = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin vouchers = 4 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgRedeemVouchersResponse {}

message MsgUnredeemVouchers {
  option (cosmos.msg.v1.signer) = "sender";
  string sender = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 project_id = 2;
  repeated cosmos.base.v1beta1.Coin shares = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "Shares"
  ];
}

message MsgUnredeemVouchersResponse {}
