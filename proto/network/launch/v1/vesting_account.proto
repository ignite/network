syntax = "proto3";
package network.launch.v1;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/ignite/network/x/launch/types";

message VestingAccount {
  uint64 launchID = 1;
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  VestingOptions vestingOptions = 3 [(gogoproto.nullable) = false];
}

message VestingOptions {
  oneof options {
    DelayedVesting delayedVesting = 1;
  }
}

// DelayedVesting represents options for delayed vesting
// Delayed vesting is the type of vesting where all vesting coins are vested
// once end time is reached
message DelayedVesting {
  repeated cosmos.base.v1beta1.Coin totalBalance = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  repeated cosmos.base.v1beta1.Coin vesting = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  google.protobuf.Timestamp endTime = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
}
