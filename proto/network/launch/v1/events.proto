syntax = "proto3";
package network.launch.v1;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "network/launch/v1/chain.proto";
import "network/launch/v1/genesis_account.proto";
import "network/launch/v1/genesis_validator.proto";
import "network/launch/v1/request.proto";
import "network/launch/v1/vesting_account.proto";

option go_package = "github.com/ignite/network/x/launch/types";

message EventChainCreated {
  uint64 launchID = 1;
  string coordinatorAddress = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 coordinatorID = 3;
}

message EventRequestCreated {
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  Request request = 2 [(gogoproto.nullable) = false];
}

message EventRequestSettled {
  uint64 launchID = 1;
  uint64 requestID = 2;
  bool approved = 3;
}

message EventGenesisAccountAdded {
  uint64 launchID = 1;
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin coins = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  string coordinatorAddress = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message EventVestingAccountAdded {
  uint64 launchID = 1;
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  VestingOptions vestingOptions = 3 [(gogoproto.nullable) = false];
  string coordinatorAddress = 4 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message EventValidatorAdded {
  uint64 launchID = 1;
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  bytes genTx = 3;
  bytes consPubKey = 4;
  cosmos.base.v1beta1.Coin selfDelegation = 5 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
  Peer peer = 6 [(gogoproto.nullable) = false];
  bool hasProject = 7;
  uint64 projectID = 8;
  string coordinatorAddress = 9 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message EventAccountRemoved {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  uint64 launchID = 2;
  string coordinatorAddress = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message EventValidatorRemoved {
  string genesisValidatorAccount = 1;
  uint64 launchID = 2;
  bool hasProject = 3;
  uint64 projectID = 4;
  string coordinatorAddress = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message EventParamChanged {
  uint64 launchID = 1;
  string module = 2;
  string param = 3;
  bytes value = 4;
}

message EventLaunchTriggered {
  uint64 launchID = 1;
  google.protobuf.Timestamp launchTimeStamp = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
}

message EventLaunchReverted {
  uint64 launchID = 1;
}
