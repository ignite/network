syntax = "proto3";
package network.launch.v1;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/ignite/network/x/launch/types";

message GenesisValidator {
  uint64 launch_id = 1;
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  bytes gen_tx = 3;
  bytes cons_pub_key = 4;
  cosmos.base.v1beta1.Coin selfDelegation = 5 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
  Peer peer = 6 [(gogoproto.nullable) = false];
}

message Peer {
  string id = 1; // e.g.: 7786ace6ddb3d771024792a46540c88587e0e8cc

  oneof connection {
    string tcp_address = 2; // use a TCP address
    HTTPTunnel http_tunnel = 3; // or use an HTTP tunnel
    EmptyConnection none = 4; // or don't provide any connection
  }

  message HTTPTunnel {
    string name = 1; // e.g.: chisel (https://github.com/jpillora/chisel)
    string address = 2; // for chisel running on Gitpod, e.g.: https://3475-chocolate-capybara-kkiztq32.ws-eu21.gitpod.io/
  }

  message EmptyConnection {}
}
