// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: network/launch/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

type MsgCreateChain struct {
	Coordinator    string                                   `protobuf:"bytes,1,opt,name=coordinator,proto3" json:"coordinator,omitempty"`
	GenesisChainId string                                   `protobuf:"bytes,2,opt,name=genesis_chain_id,json=genesisChainId,proto3" json:"genesis_chain_id,omitempty"`
	SourceUrl      string                                   `protobuf:"bytes,3,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	SourceHash     string                                   `protobuf:"bytes,4,opt,name=source_hash,json=sourceHash,proto3" json:"source_hash,omitempty"`
	InitialGenesis InitialGenesis                           `protobuf:"bytes,5,opt,name=initial_genesis,json=initialGenesis,proto3" json:"initial_genesis"`
	HasProject     bool                                     `protobuf:"varint,6,opt,name=has_project,json=hasProject,proto3" json:"has_project,omitempty"`
	ProjectId      uint64                                   `protobuf:"varint,7,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AccountBalance github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,8,rep,name=account_balance,json=accountBalance,proto3,casttype=github.com/cosmos/cosmos-sdk/types.Coin,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"account_balance"`
	Metadata       []byte                                   `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *MsgCreateChain) Reset()         { *m = MsgCreateChain{} }
func (m *MsgCreateChain) String() string { return proto.CompactTextString(m) }
func (*MsgCreateChain) ProtoMessage()    {}
func (*MsgCreateChain) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{2}
}
func (m *MsgCreateChain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateChain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateChain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateChain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateChain.Merge(m, src)
}
func (m *MsgCreateChain) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateChain) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateChain.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateChain proto.InternalMessageInfo

func (m *MsgCreateChain) GetCoordinator() string {
	if m != nil {
		return m.Coordinator
	}
	return ""
}

func (m *MsgCreateChain) GetGenesisChainId() string {
	if m != nil {
		return m.GenesisChainId
	}
	return ""
}

func (m *MsgCreateChain) GetSourceUrl() string {
	if m != nil {
		return m.SourceUrl
	}
	return ""
}

func (m *MsgCreateChain) GetSourceHash() string {
	if m != nil {
		return m.SourceHash
	}
	return ""
}

func (m *MsgCreateChain) GetInitialGenesis() InitialGenesis {
	if m != nil {
		return m.InitialGenesis
	}
	return InitialGenesis{}
}

func (m *MsgCreateChain) GetHasProject() bool {
	if m != nil {
		return m.HasProject
	}
	return false
}

func (m *MsgCreateChain) GetProjectId() uint64 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *MsgCreateChain) GetAccountBalance() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.AccountBalance
	}
	return nil
}

func (m *MsgCreateChain) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type MsgCreateChainResponse struct {
	LaunchId uint64 `protobuf:"varint,1,opt,name=launch_id,json=launchId,proto3" json:"launch_id,omitempty"`
}

func (m *MsgCreateChainResponse) Reset()         { *m = MsgCreateChainResponse{} }
func (m *MsgCreateChainResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateChainResponse) ProtoMessage()    {}
func (*MsgCreateChainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{3}
}
func (m *MsgCreateChainResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateChainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateChainResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateChainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateChainResponse.Merge(m, src)
}
func (m *MsgCreateChainResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateChainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateChainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateChainResponse proto.InternalMessageInfo

func (m *MsgCreateChainResponse) GetLaunchId() uint64 {
	if m != nil {
		return m.LaunchId
	}
	return 0
}

type MsgEditChain struct {
	Coordinator  string `protobuf:"bytes,1,opt,name=coordinator,proto3" json:"coordinator,omitempty"`
	LaunchId     uint64 `protobuf:"varint,2,opt,name=launch_id,json=launchId,proto3" json:"launch_id,omitempty"`
	SetProjectId bool   `protobuf:"varint,3,opt,name=set_project_id,json=setProjectId,proto3" json:"set_project_id,omitempty"`
	ProjectId    uint64 `protobuf:"varint,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Metadata     []byte `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *MsgEditChain) Reset()         { *m = MsgEditChain{} }
func (m *MsgEditChain) String() string { return proto.CompactTextString(m) }
func (*MsgEditChain) ProtoMessage()    {}
func (*MsgEditChain) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{4}
}
func (m *MsgEditChain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditChain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditChain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditChain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditChain.Merge(m, src)
}
func (m *MsgEditChain) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditChain) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditChain.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditChain proto.InternalMessageInfo

func (m *MsgEditChain) GetCoordinator() string {
	if m != nil {
		return m.Coordinator
	}
	return ""
}

func (m *MsgEditChain) GetLaunchId() uint64 {
	if m != nil {
		return m.LaunchId
	}
	return 0
}

func (m *MsgEditChain) GetSetProjectId() bool {
	if m != nil {
		return m.SetProjectId
	}
	return false
}

func (m *MsgEditChain) GetProjectId() uint64 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *MsgEditChain) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type MsgEditChainResponse struct {
}

func (m *MsgEditChainResponse) Reset()         { *m = MsgEditChainResponse{} }
func (m *MsgEditChainResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEditChainResponse) ProtoMessage()    {}
func (*MsgEditChainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{5}
}
func (m *MsgEditChainResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditChainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditChainResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditChainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditChainResponse.Merge(m, src)
}
func (m *MsgEditChainResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditChainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditChainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditChainResponse proto.InternalMessageInfo

type MsgUpdateLaunchInformation struct {
	Coordinator    string          `protobuf:"bytes,1,opt,name=coordinator,proto3" json:"coordinator,omitempty"`
	LaunchId       uint64          `protobuf:"varint,2,opt,name=launch_id,json=launchId,proto3" json:"launch_id,omitempty"`
	GenesisChainId string          `protobuf:"bytes,3,opt,name=genesis_chain_id,json=genesisChainId,proto3" json:"genesis_chain_id,omitempty"`
	SourceUrl      string          `protobuf:"bytes,4,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	SourceHash     string          `protobuf:"bytes,5,opt,name=source_hash,json=sourceHash,proto3" json:"source_hash,omitempty"`
	InitialGenesis *InitialGenesis `protobuf:"bytes,6,opt,name=initial_genesis,json=initialGenesis,proto3" json:"initial_genesis,omitempty"`
}

func (m *MsgUpdateLaunchInformation) Reset()         { *m = MsgUpdateLaunchInformation{} }
func (m *MsgUpdateLaunchInformation) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLaunchInformation) ProtoMessage()    {}
func (*MsgUpdateLaunchInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{6}
}
func (m *MsgUpdateLaunchInformation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLaunchInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLaunchInformation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLaunchInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLaunchInformation.Merge(m, src)
}
func (m *MsgUpdateLaunchInformation) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLaunchInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLaunchInformation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLaunchInformation proto.InternalMessageInfo

func (m *MsgUpdateLaunchInformation) GetCoordinator() string {
	if m != nil {
		return m.Coordinator
	}
	return ""
}

func (m *MsgUpdateLaunchInformation) GetLaunchId() uint64 {
	if m != nil {
		return m.LaunchId
	}
	return 0
}

func (m *MsgUpdateLaunchInformation) GetGenesisChainId() string {
	if m != nil {
		return m.GenesisChainId
	}
	return ""
}

func (m *MsgUpdateLaunchInformation) GetSourceUrl() string {
	if m != nil {
		return m.SourceUrl
	}
	return ""
}

func (m *MsgUpdateLaunchInformation) GetSourceHash() string {
	if m != nil {
		return m.SourceHash
	}
	return ""
}

func (m *MsgUpdateLaunchInformation) GetInitialGenesis() *InitialGenesis {
	if m != nil {
		return m.InitialGenesis
	}
	return nil
}

type MsgUpdateLaunchInformationResponse struct {
}

func (m *MsgUpdateLaunchInformationResponse) Reset()         { *m = MsgUpdateLaunchInformationResponse{} }
func (m *MsgUpdateLaunchInformationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLaunchInformationResponse) ProtoMessage()    {}
func (*MsgUpdateLaunchInformationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{7}
}
func (m *MsgUpdateLaunchInformationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLaunchInformationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLaunchInformationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLaunchInformationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLaunchInformationResponse.Merge(m, src)
}
func (m *MsgUpdateLaunchInformationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLaunchInformationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLaunchInformationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLaunchInformationResponse proto.InternalMessageInfo

type MsgSendRequest struct {
	Creator  string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	LaunchId uint64         `protobuf:"varint,2,opt,name=launch_id,json=launchId,proto3" json:"launch_id,omitempty"`
	Content  RequestContent `protobuf:"bytes,3,opt,name=content,proto3" json:"content"`
}

func (m *MsgSendRequest) Reset()         { *m = MsgSendRequest{} }
func (m *MsgSendRequest) String() string { return proto.CompactTextString(m) }
func (*MsgSendRequest) ProtoMessage()    {}
func (*MsgSendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{8}
}
func (m *MsgSendRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSendRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSendRequest.Merge(m, src)
}
func (m *MsgSendRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgSendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSendRequest proto.InternalMessageInfo

func (m *MsgSendRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSendRequest) GetLaunchId() uint64 {
	if m != nil {
		return m.LaunchId
	}
	return 0
}

func (m *MsgSendRequest) GetContent() RequestContent {
	if m != nil {
		return m.Content
	}
	return RequestContent{}
}

type MsgSendRequestResponse struct {
	RequestId    uint64 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	AutoApproved bool   `protobuf:"varint,2,opt,name=auto_approved,json=autoApproved,proto3" json:"auto_approved,omitempty"`
}

func (m *MsgSendRequestResponse) Reset()         { *m = MsgSendRequestResponse{} }
func (m *MsgSendRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSendRequestResponse) ProtoMessage()    {}
func (*MsgSendRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{9}
}
func (m *MsgSendRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSendRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSendRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSendRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSendRequestResponse.Merge(m, src)
}
func (m *MsgSendRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSendRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSendRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSendRequestResponse proto.InternalMessageInfo

func (m *MsgSendRequestResponse) GetRequestId() uint64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *MsgSendRequestResponse) GetAutoApproved() bool {
	if m != nil {
		return m.AutoApproved
	}
	return false
}

type MsgSettleRequest struct {
	Signer    string `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	LaunchId  uint64 `protobuf:"varint,2,opt,name=launch_id,json=launchId,proto3" json:"launch_id,omitempty"`
	RequestId uint64 `protobuf:"varint,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Approve   bool   `protobuf:"varint,4,opt,name=approve,proto3" json:"approve,omitempty"`
}

func (m *MsgSettleRequest) Reset()         { *m = MsgSettleRequest{} }
func (m *MsgSettleRequest) String() string { return proto.CompactTextString(m) }
func (*MsgSettleRequest) ProtoMessage()    {}
func (*MsgSettleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{10}
}
func (m *MsgSettleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSettleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSettleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSettleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSettleRequest.Merge(m, src)
}
func (m *MsgSettleRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgSettleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSettleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSettleRequest proto.InternalMessageInfo

func (m *MsgSettleRequest) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

func (m *MsgSettleRequest) GetLaunchId() uint64 {
	if m != nil {
		return m.LaunchId
	}
	return 0
}

func (m *MsgSettleRequest) GetRequestId() uint64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *MsgSettleRequest) GetApprove() bool {
	if m != nil {
		return m.Approve
	}
	return false
}

type MsgSettleRequestResponse struct {
}

func (m *MsgSettleRequestResponse) Reset()         { *m = MsgSettleRequestResponse{} }
func (m *MsgSettleRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSettleRequestResponse) ProtoMessage()    {}
func (*MsgSettleRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{11}
}
func (m *MsgSettleRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSettleRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSettleRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSettleRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSettleRequestResponse.Merge(m, src)
}
func (m *MsgSettleRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSettleRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSettleRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSettleRequestResponse proto.InternalMessageInfo

type MsgTriggerLaunch struct {
	Coordinator string        `protobuf:"bytes,1,opt,name=coordinator,proto3" json:"coordinator,omitempty"`
	LaunchId    uint64        `protobuf:"varint,2,opt,name=launch_id,json=launchId,proto3" json:"launch_id,omitempty"`
	LaunchTime  time.Duration `protobuf:"bytes,3,opt,name=launch_time,json=launchTime,proto3,stdduration" json:"launch_time"`
}

func (m *MsgTriggerLaunch) Reset()         { *m = MsgTriggerLaunch{} }
func (m *MsgTriggerLaunch) String() string { return proto.CompactTextString(m) }
func (*MsgTriggerLaunch) ProtoMessage()    {}
func (*MsgTriggerLaunch) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{12}
}
func (m *MsgTriggerLaunch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTriggerLaunch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTriggerLaunch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTriggerLaunch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTriggerLaunch.Merge(m, src)
}
func (m *MsgTriggerLaunch) XXX_Size() int {
	return m.Size()
}
func (m *MsgTriggerLaunch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTriggerLaunch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTriggerLaunch proto.InternalMessageInfo

func (m *MsgTriggerLaunch) GetCoordinator() string {
	if m != nil {
		return m.Coordinator
	}
	return ""
}

func (m *MsgTriggerLaunch) GetLaunchId() uint64 {
	if m != nil {
		return m.LaunchId
	}
	return 0
}

func (m *MsgTriggerLaunch) GetLaunchTime() time.Duration {
	if m != nil {
		return m.LaunchTime
	}
	return 0
}

type MsgTriggerLaunchResponse struct {
}

func (m *MsgTriggerLaunchResponse) Reset()         { *m = MsgTriggerLaunchResponse{} }
func (m *MsgTriggerLaunchResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTriggerLaunchResponse) ProtoMessage()    {}
func (*MsgTriggerLaunchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{13}
}
func (m *MsgTriggerLaunchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTriggerLaunchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTriggerLaunchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTriggerLaunchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTriggerLaunchResponse.Merge(m, src)
}
func (m *MsgTriggerLaunchResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTriggerLaunchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTriggerLaunchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTriggerLaunchResponse proto.InternalMessageInfo

type MsgRevertLaunch struct {
	Coordinator string `protobuf:"bytes,1,opt,name=coordinator,proto3" json:"coordinator,omitempty"`
	LaunchId    uint64 `protobuf:"varint,2,opt,name=launch_id,json=launchId,proto3" json:"launch_id,omitempty"`
}

func (m *MsgRevertLaunch) Reset()         { *m = MsgRevertLaunch{} }
func (m *MsgRevertLaunch) String() string { return proto.CompactTextString(m) }
func (*MsgRevertLaunch) ProtoMessage()    {}
func (*MsgRevertLaunch) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{14}
}
func (m *MsgRevertLaunch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevertLaunch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevertLaunch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevertLaunch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevertLaunch.Merge(m, src)
}
func (m *MsgRevertLaunch) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevertLaunch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevertLaunch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevertLaunch proto.InternalMessageInfo

func (m *MsgRevertLaunch) GetCoordinator() string {
	if m != nil {
		return m.Coordinator
	}
	return ""
}

func (m *MsgRevertLaunch) GetLaunchId() uint64 {
	if m != nil {
		return m.LaunchId
	}
	return 0
}

type MsgRevertLaunchResponse struct {
}

func (m *MsgRevertLaunchResponse) Reset()         { *m = MsgRevertLaunchResponse{} }
func (m *MsgRevertLaunchResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRevertLaunchResponse) ProtoMessage()    {}
func (*MsgRevertLaunchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_485455467792033b, []int{15}
}
func (m *MsgRevertLaunchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevertLaunchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevertLaunchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevertLaunchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevertLaunchResponse.Merge(m, src)
}
func (m *MsgRevertLaunchResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevertLaunchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevertLaunchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevertLaunchResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "network.launch.v1.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "network.launch.v1.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgCreateChain)(nil), "network.launch.v1.MsgCreateChain")
	proto.RegisterType((*MsgCreateChainResponse)(nil), "network.launch.v1.MsgCreateChainResponse")
	proto.RegisterType((*MsgEditChain)(nil), "network.launch.v1.MsgEditChain")
	proto.RegisterType((*MsgEditChainResponse)(nil), "network.launch.v1.MsgEditChainResponse")
	proto.RegisterType((*MsgUpdateLaunchInformation)(nil), "network.launch.v1.MsgUpdateLaunchInformation")
	proto.RegisterType((*MsgUpdateLaunchInformationResponse)(nil), "network.launch.v1.MsgUpdateLaunchInformationResponse")
	proto.RegisterType((*MsgSendRequest)(nil), "network.launch.v1.MsgSendRequest")
	proto.RegisterType((*MsgSendRequestResponse)(nil), "network.launch.v1.MsgSendRequestResponse")
	proto.RegisterType((*MsgSettleRequest)(nil), "network.launch.v1.MsgSettleRequest")
	proto.RegisterType((*MsgSettleRequestResponse)(nil), "network.launch.v1.MsgSettleRequestResponse")
	proto.RegisterType((*MsgTriggerLaunch)(nil), "network.launch.v1.MsgTriggerLaunch")
	proto.RegisterType((*MsgTriggerLaunchResponse)(nil), "network.launch.v1.MsgTriggerLaunchResponse")
	proto.RegisterType((*MsgRevertLaunch)(nil), "network.launch.v1.MsgRevertLaunch")
	proto.RegisterType((*MsgRevertLaunchResponse)(nil), "network.launch.v1.MsgRevertLaunchResponse")
}

func init() { proto.RegisterFile("network/launch/v1/tx.proto", fileDescriptor_485455467792033b) }

var fileDescriptor_485455467792033b = []byte{
	// 1163 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x41, 0x6f, 0x1b, 0x45,
	0x14, 0xce, 0xc6, 0x8e, 0x63, 0x8f, 0xdd, 0x24, 0x5d, 0x45, 0xcd, 0x66, 0x51, 0x6c, 0xd7, 0xad,
	0x54, 0x13, 0x94, 0x5d, 0x92, 0xaa, 0x1c, 0x22, 0x2e, 0x71, 0x8a, 0x20, 0x88, 0x48, 0xd1, 0xb6,
	0xb9, 0x00, 0xc2, 0x1a, 0xef, 0x4e, 0xd7, 0x43, 0xbd, 0x3b, 0xee, 0xce, 0x38, 0x34, 0x12, 0x12,
	0x88, 0x23, 0x27, 0x8e, 0x88, 0x33, 0x12, 0x88, 0x03, 0x8a, 0x10, 0xdc, 0xe0, 0xc4, 0xa5, 0xc7,
	0x8a, 0x13, 0xe2, 0xd0, 0xa2, 0xe4, 0x90, 0xff, 0xc0, 0x09, 0xed, 0xcc, 0xec, 0x66, 0xd7, 0x5e,
	0xc7, 0x46, 0x28, 0x97, 0x36, 0xfb, 0xde, 0x37, 0xf3, 0xde, 0xfb, 0xde, 0xfb, 0xc6, 0x0f, 0xe8,
	0x3e, 0x62, 0x9f, 0x90, 0xe0, 0xb1, 0xd9, 0x83, 0x03, 0xdf, 0xee, 0x9a, 0x47, 0x9b, 0x26, 0x7b,
	0x6a, 0xf4, 0x03, 0xc2, 0x88, 0x7a, 0x5d, 0xfa, 0x0c, 0xe1, 0x33, 0x8e, 0x36, 0xf5, 0xeb, 0xd0,
	0xc3, 0x3e, 0x31, 0xf9, 0xbf, 0x02, 0xa5, 0x57, 0x6d, 0x42, 0x3d, 0x42, 0xcd, 0x0e, 0xa4, 0xc8,
	0x3c, 0xda, 0xec, 0x20, 0x06, 0x37, 0x4d, 0x9b, 0x60, 0x5f, 0xfa, 0x57, 0xa4, 0xdf, 0xa3, 0x6e,
	0x78, 0xbb, 0x47, 0x5d, 0xe9, 0x58, 0x15, 0x8e, 0x36, 0xff, 0x32, 0xc5, 0x87, 0x74, 0x2d, 0xbb,
	0xc4, 0x25, 0xc2, 0x1e, 0xfe, 0x15, 0x45, 0x72, 0x09, 0x71, 0x7b, 0xc8, 0xe4, 0x5f, 0x9d, 0xc1,
	0x23, 0xd3, 0x19, 0x04, 0x90, 0x61, 0x12, 0x45, 0xaa, 0x0d, 0xfb, 0x19, 0xf6, 0x10, 0x65, 0xd0,
	0xeb, 0x4b, 0xc0, 0xda, 0x68, 0xb1, 0x76, 0x17, 0xc6, 0x99, 0x56, 0x47, 0xdd, 0x7d, 0x18, 0x40,
	0x2f, 0xca, 0xaa, 0x36, 0xea, 0x0f, 0xd0, 0x93, 0x01, 0xa2, 0x4c, 0x00, 0x1a, 0xbf, 0x2a, 0x60,
	0x71, 0x9f, 0xba, 0x87, 0x7d, 0x07, 0x32, 0x74, 0xc0, 0x8f, 0xaa, 0x6f, 0x80, 0x12, 0x1c, 0xb0,
	0x2e, 0x09, 0x30, 0x3b, 0xd6, 0x94, 0xba, 0xd2, 0x2c, 0xb5, 0xb4, 0x3f, 0x7e, 0xde, 0x58, 0x96,
	0xf5, 0xee, 0x38, 0x4e, 0x80, 0x28, 0x7d, 0xc0, 0x02, 0xec, 0xbb, 0xd6, 0x05, 0x54, 0x7d, 0x13,
	0x14, 0x44, 0x70, 0x6d, 0xb6, 0xae, 0x34, 0xcb, 0x5b, 0xab, 0xc6, 0x48, 0x37, 0x0c, 0x11, 0xa2,
	0x55, 0x7a, 0xf6, 0xa2, 0x36, 0xf3, 0xfd, 0xf9, 0xc9, 0xba, 0x62, 0xc9, 0x33, 0xdb, 0x77, 0xbf,
	0x38, 0x3f, 0x59, 0xbf, 0xb8, 0xed, 0xcb, 0xf3, 0x93, 0xf5, 0x7a, 0x94, 0xfd, 0xd3, 0x28, 0xff,
	0xa1, 0x54, 0x1b, 0xab, 0x60, 0x65, 0xc8, 0x64, 0x21, 0xda, 0x27, 0x3e, 0x45, 0x8d, 0x1f, 0xf3,
	0x60, 0x61, 0x9f, 0xba, 0xbb, 0x01, 0x82, 0x0c, 0xed, 0x86, 0x9c, 0xa9, 0xdb, 0xa0, 0x6c, 0x13,
	0x12, 0x38, 0xd8, 0x87, 0x8c, 0x04, 0x13, 0x4b, 0x4b, 0x82, 0xd5, 0x26, 0x58, 0x72, 0x91, 0x8f,
	0x28, 0xa6, 0x6d, 0xde, 0x80, 0x36, 0x76, 0x78, 0x99, 0x25, 0x6b, 0x41, 0xda, 0x79, 0x8c, 0x3d,
	0x47, 0x5d, 0x03, 0x80, 0x92, 0x41, 0x60, 0xa3, 0xf6, 0x20, 0xe8, 0x69, 0x39, 0x8e, 0x29, 0x09,
	0xcb, 0x61, 0xd0, 0x53, 0x6b, 0xa0, 0x2c, 0xdd, 0x5d, 0x48, 0xbb, 0x5a, 0x9e, 0xfb, 0xe5, 0x89,
	0x77, 0x20, 0xed, 0xaa, 0x07, 0x60, 0x11, 0xfb, 0x98, 0x61, 0xd8, 0x6b, 0xcb, 0x9b, 0xb5, 0x39,
	0xce, 0xe7, 0xcd, 0x0c, 0x3e, 0xf7, 0x04, 0xf2, 0x6d, 0x01, 0x6c, 0xe5, 0x43, 0x5e, 0xad, 0x05,
	0x9c, 0xb2, 0x86, 0x21, 0xbb, 0x90, 0x4f, 0xed, 0xc7, 0xc8, 0x66, 0x5a, 0xa1, 0xae, 0x34, 0x8b,
	0x16, 0xe8, 0x42, 0x7a, 0x20, 0x2c, 0x61, 0xca, 0xd2, 0x19, 0x96, 0x35, 0x5f, 0x57, 0x9a, 0x79,
	0xab, 0x24, 0x2d, 0x7b, 0x8e, 0xfa, 0x8b, 0x02, 0x16, 0xa1, 0x6d, 0x93, 0x81, 0xcf, 0xda, 0x1d,
	0xd8, 0x83, 0xbe, 0x8d, 0xb4, 0x62, 0x3d, 0xc7, 0x5b, 0x2c, 0x99, 0x0b, 0xa5, 0x64, 0x48, 0x29,
	0x19, 0xbb, 0x04, 0xfb, 0xad, 0x27, 0x61, 0x2a, 0xff, 0xbc, 0xa8, 0xdd, 0x71, 0x31, 0xeb, 0x0e,
	0x3a, 0x86, 0x4d, 0x3c, 0xa9, 0x18, 0xf9, 0xdf, 0x06, 0x75, 0x1e, 0x9b, 0xec, 0xb8, 0x8f, 0x28,
	0x3f, 0xf0, 0xc3, 0xcb, 0x5a, 0x73, 0x4a, 0x28, 0xfd, 0xe6, 0xfc, 0x64, 0xbd, 0xd2, 0x43, 0x2e,
	0xb4, 0x8f, 0xdb, 0xa1, 0x6e, 0xa9, 0x18, 0xa5, 0x05, 0x99, 0x64, 0x4b, 0xe4, 0xa8, 0xea, 0xa0,
	0xe8, 0x21, 0x06, 0x1d, 0xc8, 0xa0, 0x56, 0xaa, 0x2b, 0xcd, 0x8a, 0x15, 0x7f, 0x6f, 0x2f, 0x85,
	0xe3, 0x96, 0xec, 0x70, 0xe3, 0x1e, 0xb8, 0x91, 0x9e, 0x97, 0x68, 0x94, 0xd4, 0x57, 0x40, 0x49,
	0x30, 0x1e, 0xb2, 0xa3, 0x70, 0x76, 0x8a, 0xc2, 0xb0, 0xe7, 0x34, 0xfe, 0x52, 0x40, 0x65, 0x9f,
	0xba, 0x6f, 0x39, 0x98, 0xfd, 0xff, 0x29, 0x4b, 0x45, 0x9a, 0x4d, 0x47, 0x52, 0x6f, 0x83, 0x05,
	0x8a, 0x58, 0x3b, 0xd1, 0xa9, 0x1c, 0xef, 0x64, 0x85, 0x22, 0x76, 0x10, 0x37, 0x2b, 0xdd, 0xcb,
	0xfc, 0x70, 0x2f, 0x93, 0x9c, 0xcc, 0x4d, 0xe4, 0xe4, 0x06, 0x58, 0x4e, 0xd6, 0x16, 0x8b, 0xeb,
	0xb7, 0x59, 0xa0, 0xc7, 0xc2, 0x7b, 0x4f, 0x24, 0xe8, 0x3f, 0x22, 0x81, 0xc7, 0x1f, 0xb7, 0xab,
	0xa3, 0x20, 0x4b, 0x85, 0xb9, 0x29, 0x54, 0x98, 0x9f, 0xa0, 0xc2, 0xb9, 0x11, 0x15, 0xbe, 0x3b,
	0xaa, 0xc2, 0xc2, 0x94, 0x2a, 0x1c, 0xd6, 0x5f, 0x06, 0xaf, 0xb7, 0x41, 0x63, 0x3c, 0x7d, 0x31,
	0xcb, 0x3f, 0x29, 0xfc, 0x09, 0x7b, 0x80, 0x7c, 0xc7, 0x12, 0xaf, 0xb6, 0xba, 0x05, 0xe6, 0xed,
	0x70, 0x42, 0xa7, 0x60, 0x35, 0x02, 0x5e, 0xce, 0xe8, 0x0e, 0x98, 0xb7, 0x89, 0xcf, 0x90, 0xcf,
	0x38, 0x91, 0xd9, 0xf5, 0xc9, 0xe8, 0xbb, 0x02, 0x28, 0x5f, 0x99, 0xe8, 0xdc, 0x76, 0x25, 0x2c,
	0x2f, 0x8a, 0xd6, 0xf8, 0x90, 0xcb, 0x28, 0x91, 0x73, 0x2c, 0xa3, 0x35, 0x00, 0xe4, 0x8f, 0xcf,
	0x85, 0x8e, 0x4a, 0xd2, 0xb2, 0xe7, 0xa8, 0xb7, 0xc0, 0x35, 0x38, 0x60, 0xa4, 0x0d, 0xfb, 0xfd,
	0x80, 0x1c, 0x21, 0x91, 0x6a, 0xd1, 0xaa, 0x84, 0xc6, 0x1d, 0x69, 0x6b, 0x7c, 0xa7, 0x80, 0x25,
	0x7e, 0x3d, 0x63, 0x3d, 0x14, 0x91, 0xf2, 0x3a, 0x28, 0x50, 0xec, 0xfa, 0x68, 0x32, 0x27, 0x12,
	0x77, 0x39, 0x25, 0xe9, 0x3c, 0x73, 0xc3, 0x79, 0x6a, 0x60, 0x5e, 0xa6, 0xc8, 0xc7, 0xaa, 0x68,
	0x45, 0x9f, 0xdb, 0xe5, 0x90, 0x08, 0x19, 0xa2, 0xa1, 0x03, 0x6d, 0x38, 0xd1, 0xb8, 0xb1, 0xbf,
	0x8b, 0x2a, 0x1e, 0x06, 0xd8, 0x75, 0x51, 0x20, 0x06, 0xe0, 0xea, 0x44, 0x73, 0x1f, 0x94, 0xa5,
	0x33, 0xdc, 0x2e, 0x64, 0x9b, 0x57, 0x0d, 0xb1, 0x7a, 0x18, 0xd1, 0xea, 0x61, 0xdc, 0x97, 0xab,
	0x49, 0xab, 0x18, 0xb6, 0xf7, 0xeb, 0x97, 0x35, 0xc5, 0x02, 0xe2, 0xdc, 0x43, 0xec, 0xa1, 0x8c,
	0x21, 0x16, 0x15, 0xa6, 0x8a, 0x88, 0x2b, 0xfc, 0x94, 0xaf, 0x15, 0x16, 0x3a, 0x42, 0x01, 0xbb,
	0xe2, 0xfa, 0x32, 0x32, 0x13, 0x6b, 0x41, 0x32, 0x7a, 0x94, 0xd8, 0xd6, 0xb7, 0x05, 0x90, 0xdb,
	0xa7, 0xae, 0xfa, 0x11, 0xa8, 0xa4, 0x96, 0x9e, 0x46, 0xc6, 0xd8, 0x0f, 0xad, 0x16, 0xfa, 0xfa,
	0x64, 0x4c, 0x3c, 0xec, 0x1f, 0x80, 0x72, 0x72, 0xf5, 0xb8, 0x99, 0x7d, 0x34, 0x01, 0xd1, 0x5f,
	0x9d, 0x08, 0x89, 0x2f, 0x3f, 0x04, 0xa5, 0x8b, 0xdf, 0x9b, 0x5a, 0xf6, 0xb9, 0x18, 0xa0, 0xdf,
	0x99, 0x00, 0x88, 0xaf, 0xfd, 0x0c, 0xac, 0x8c, 0x7b, 0xd1, 0x37, 0x2e, 0x2b, 0x7d, 0x04, 0xae,
	0xdf, 0xfb, 0x4f, 0xf0, 0x24, 0x69, 0xc9, 0xc7, 0x6e, 0x0c, 0x69, 0x09, 0xc8, 0x38, 0xd2, 0xb2,
	0x9e, 0x1f, 0x08, 0xae, 0xa5, 0x9f, 0x8d, 0x5b, 0xe3, 0xce, 0x26, 0x40, 0xfa, 0x6b, 0x53, 0x80,
	0x92, 0x21, 0xd2, 0x9a, 0x1e, 0x13, 0x22, 0x05, 0x1a, 0x17, 0x22, 0x53, 0x58, 0xe1, 0xdc, 0xa6,
	0x54, 0x35, 0x66, 0x6e, 0x93, 0x98, 0x71, 0x73, 0x9b, 0xa5, 0x0f, 0x7d, 0xee, 0xf3, 0x70, 0x95,
	0x6a, 0xb5, 0x9e, 0x9d, 0x56, 0x95, 0xe7, 0xa7, 0x55, 0xe5, 0xef, 0xd3, 0xaa, 0xf2, 0xd5, 0x59,
	0x75, 0xe6, 0xf9, 0x59, 0x75, 0xe6, 0xcf, 0xb3, 0xea, 0xcc, 0xfb, 0xc9, 0x25, 0x0d, 0xbb, 0x3e,
	0x66, 0xc8, 0x1c, 0x59, 0xd3, 0xf9, 0xaa, 0xd6, 0x29, 0xf0, 0xa7, 0xe5, 0xee, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xd7, 0xb1, 0x2c, 0x2f, 0xb1, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	CreateChain(ctx context.Context, in *MsgCreateChain, opts ...grpc.CallOption) (*MsgCreateChainResponse, error)
	EditChain(ctx context.Context, in *MsgEditChain, opts ...grpc.CallOption) (*MsgEditChainResponse, error)
	UpdateLaunchInformation(ctx context.Context, in *MsgUpdateLaunchInformation, opts ...grpc.CallOption) (*MsgUpdateLaunchInformationResponse, error)
	SendRequest(ctx context.Context, in *MsgSendRequest, opts ...grpc.CallOption) (*MsgSendRequestResponse, error)
	SettleRequest(ctx context.Context, in *MsgSettleRequest, opts ...grpc.CallOption) (*MsgSettleRequestResponse, error)
	TriggerLaunch(ctx context.Context, in *MsgTriggerLaunch, opts ...grpc.CallOption) (*MsgTriggerLaunchResponse, error)
	RevertLaunch(ctx context.Context, in *MsgRevertLaunch, opts ...grpc.CallOption) (*MsgRevertLaunchResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/network.launch.v1.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateChain(ctx context.Context, in *MsgCreateChain, opts ...grpc.CallOption) (*MsgCreateChainResponse, error) {
	out := new(MsgCreateChainResponse)
	err := c.cc.Invoke(ctx, "/network.launch.v1.Msg/CreateChain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EditChain(ctx context.Context, in *MsgEditChain, opts ...grpc.CallOption) (*MsgEditChainResponse, error) {
	out := new(MsgEditChainResponse)
	err := c.cc.Invoke(ctx, "/network.launch.v1.Msg/EditChain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateLaunchInformation(ctx context.Context, in *MsgUpdateLaunchInformation, opts ...grpc.CallOption) (*MsgUpdateLaunchInformationResponse, error) {
	out := new(MsgUpdateLaunchInformationResponse)
	err := c.cc.Invoke(ctx, "/network.launch.v1.Msg/UpdateLaunchInformation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SendRequest(ctx context.Context, in *MsgSendRequest, opts ...grpc.CallOption) (*MsgSendRequestResponse, error) {
	out := new(MsgSendRequestResponse)
	err := c.cc.Invoke(ctx, "/network.launch.v1.Msg/SendRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SettleRequest(ctx context.Context, in *MsgSettleRequest, opts ...grpc.CallOption) (*MsgSettleRequestResponse, error) {
	out := new(MsgSettleRequestResponse)
	err := c.cc.Invoke(ctx, "/network.launch.v1.Msg/SettleRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) TriggerLaunch(ctx context.Context, in *MsgTriggerLaunch, opts ...grpc.CallOption) (*MsgTriggerLaunchResponse, error) {
	out := new(MsgTriggerLaunchResponse)
	err := c.cc.Invoke(ctx, "/network.launch.v1.Msg/TriggerLaunch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RevertLaunch(ctx context.Context, in *MsgRevertLaunch, opts ...grpc.CallOption) (*MsgRevertLaunchResponse, error) {
	out := new(MsgRevertLaunchResponse)
	err := c.cc.Invoke(ctx, "/network.launch.v1.Msg/RevertLaunch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	CreateChain(context.Context, *MsgCreateChain) (*MsgCreateChainResponse, error)
	EditChain(context.Context, *MsgEditChain) (*MsgEditChainResponse, error)
	UpdateLaunchInformation(context.Context, *MsgUpdateLaunchInformation) (*MsgUpdateLaunchInformationResponse, error)
	SendRequest(context.Context, *MsgSendRequest) (*MsgSendRequestResponse, error)
	SettleRequest(context.Context, *MsgSettleRequest) (*MsgSettleRequestResponse, error)
	TriggerLaunch(context.Context, *MsgTriggerLaunch) (*MsgTriggerLaunchResponse, error)
	RevertLaunch(context.Context, *MsgRevertLaunch) (*MsgRevertLaunchResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) CreateChain(ctx context.Context, req *MsgCreateChain) (*MsgCreateChainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChain not implemented")
}
func (*UnimplementedMsgServer) EditChain(ctx context.Context, req *MsgEditChain) (*MsgEditChainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditChain not implemented")
}
func (*UnimplementedMsgServer) UpdateLaunchInformation(ctx context.Context, req *MsgUpdateLaunchInformation) (*MsgUpdateLaunchInformationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLaunchInformation not implemented")
}
func (*UnimplementedMsgServer) SendRequest(ctx context.Context, req *MsgSendRequest) (*MsgSendRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendRequest not implemented")
}
func (*UnimplementedMsgServer) SettleRequest(ctx context.Context, req *MsgSettleRequest) (*MsgSettleRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SettleRequest not implemented")
}
func (*UnimplementedMsgServer) TriggerLaunch(ctx context.Context, req *MsgTriggerLaunch) (*MsgTriggerLaunchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerLaunch not implemented")
}
func (*UnimplementedMsgServer) RevertLaunch(ctx context.Context, req *MsgRevertLaunch) (*MsgRevertLaunchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevertLaunch not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.launch.v1.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateChain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateChain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateChain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.launch.v1.Msg/CreateChain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateChain(ctx, req.(*MsgCreateChain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EditChain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEditChain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EditChain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.launch.v1.Msg/EditChain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EditChain(ctx, req.(*MsgEditChain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateLaunchInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateLaunchInformation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateLaunchInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.launch.v1.Msg/UpdateLaunchInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateLaunchInformation(ctx, req.(*MsgUpdateLaunchInformation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SendRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SendRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.launch.v1.Msg/SendRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SendRequest(ctx, req.(*MsgSendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SettleRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSettleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SettleRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.launch.v1.Msg/SettleRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SettleRequest(ctx, req.(*MsgSettleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_TriggerLaunch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTriggerLaunch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).TriggerLaunch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.launch.v1.Msg/TriggerLaunch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).TriggerLaunch(ctx, req.(*MsgTriggerLaunch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RevertLaunch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRevertLaunch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RevertLaunch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.launch.v1.Msg/RevertLaunch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RevertLaunch(ctx, req.(*MsgRevertLaunch))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "network.launch.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "CreateChain",
			Handler:    _Msg_CreateChain_Handler,
		},
		{
			MethodName: "EditChain",
			Handler:    _Msg_EditChain_Handler,
		},
		{
			MethodName: "UpdateLaunchInformation",
			Handler:    _Msg_UpdateLaunchInformation_Handler,
		},
		{
			MethodName: "SendRequest",
			Handler:    _Msg_SendRequest_Handler,
		},
		{
			MethodName: "SettleRequest",
			Handler:    _Msg_SettleRequest_Handler,
		},
		{
			MethodName: "TriggerLaunch",
			Handler:    _Msg_TriggerLaunch_Handler,
		},
		{
			MethodName: "RevertLaunch",
			Handler:    _Msg_RevertLaunch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "network/launch/v1/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateChain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateChain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateChain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.AccountBalance) > 0 {
		for iNdEx := len(m.AccountBalance) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AccountBalance[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if m.ProjectId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProjectId))
		i--
		dAtA[i] = 0x38
	}
	if m.HasProject {
		i--
		if m.HasProject {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	{
		size, err := m.InitialGenesis.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if len(m.SourceHash) > 0 {
		i -= len(m.SourceHash)
		copy(dAtA[i:], m.SourceHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SourceHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.SourceUrl) > 0 {
		i -= len(m.SourceUrl)
		copy(dAtA[i:], m.SourceUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SourceUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.GenesisChainId) > 0 {
		i -= len(m.GenesisChainId)
		copy(dAtA[i:], m.GenesisChainId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GenesisChainId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Coordinator) > 0 {
		i -= len(m.Coordinator)
		copy(dAtA[i:], m.Coordinator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Coordinator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateChainResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateChainResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateChainResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LaunchId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LaunchId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgEditChain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditChain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditChain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ProjectId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProjectId))
		i--
		dAtA[i] = 0x20
	}
	if m.SetProjectId {
		i--
		if m.SetProjectId {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.LaunchId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LaunchId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Coordinator) > 0 {
		i -= len(m.Coordinator)
		copy(dAtA[i:], m.Coordinator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Coordinator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEditChainResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditChainResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditChainResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLaunchInformation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLaunchInformation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLaunchInformation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.InitialGenesis != nil {
		{
			size, err := m.InitialGenesis.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.SourceHash) > 0 {
		i -= len(m.SourceHash)
		copy(dAtA[i:], m.SourceHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SourceHash)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SourceUrl) > 0 {
		i -= len(m.SourceUrl)
		copy(dAtA[i:], m.SourceUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SourceUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.GenesisChainId) > 0 {
		i -= len(m.GenesisChainId)
		copy(dAtA[i:], m.GenesisChainId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GenesisChainId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.LaunchId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LaunchId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Coordinator) > 0 {
		i -= len(m.Coordinator)
		copy(dAtA[i:], m.Coordinator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Coordinator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLaunchInformationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLaunchInformationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLaunchInformationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSendRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSendRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSendRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Content.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.LaunchId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LaunchId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSendRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSendRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSendRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AutoApproved {
		i--
		if m.AutoApproved {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.RequestId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RequestId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgSettleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSettleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSettleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Approve {
		i--
		if m.Approve {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.RequestId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RequestId))
		i--
		dAtA[i] = 0x18
	}
	if m.LaunchId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LaunchId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSettleRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSettleRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSettleRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgTriggerLaunch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTriggerLaunch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTriggerLaunch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n5, err5 := github_com_cosmos_gogoproto_types.StdDurationMarshalTo(m.LaunchTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.LaunchTime):])
	if err5 != nil {
		return 0, err5
	}
	i -= n5
	i = encodeVarintTx(dAtA, i, uint64(n5))
	i--
	dAtA[i] = 0x1a
	if m.LaunchId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LaunchId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Coordinator) > 0 {
		i -= len(m.Coordinator)
		copy(dAtA[i:], m.Coordinator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Coordinator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTriggerLaunchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTriggerLaunchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTriggerLaunchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRevertLaunch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevertLaunch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevertLaunch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LaunchId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LaunchId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Coordinator) > 0 {
		i -= len(m.Coordinator)
		copy(dAtA[i:], m.Coordinator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Coordinator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRevertLaunchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevertLaunchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevertLaunchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateChain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Coordinator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GenesisChainId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SourceUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SourceHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.InitialGenesis.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.HasProject {
		n += 2
	}
	if m.ProjectId != 0 {
		n += 1 + sovTx(uint64(m.ProjectId))
	}
	if len(m.AccountBalance) > 0 {
		for _, e := range m.AccountBalance {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateChainResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LaunchId != 0 {
		n += 1 + sovTx(uint64(m.LaunchId))
	}
	return n
}

func (m *MsgEditChain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Coordinator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LaunchId != 0 {
		n += 1 + sovTx(uint64(m.LaunchId))
	}
	if m.SetProjectId {
		n += 2
	}
	if m.ProjectId != 0 {
		n += 1 + sovTx(uint64(m.ProjectId))
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEditChainResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateLaunchInformation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Coordinator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LaunchId != 0 {
		n += 1 + sovTx(uint64(m.LaunchId))
	}
	l = len(m.GenesisChainId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SourceUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SourceHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.InitialGenesis != nil {
		l = m.InitialGenesis.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateLaunchInformationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSendRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LaunchId != 0 {
		n += 1 + sovTx(uint64(m.LaunchId))
	}
	l = m.Content.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSendRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestId != 0 {
		n += 1 + sovTx(uint64(m.RequestId))
	}
	if m.AutoApproved {
		n += 2
	}
	return n
}

func (m *MsgSettleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LaunchId != 0 {
		n += 1 + sovTx(uint64(m.LaunchId))
	}
	if m.RequestId != 0 {
		n += 1 + sovTx(uint64(m.RequestId))
	}
	if m.Approve {
		n += 2
	}
	return n
}

func (m *MsgSettleRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgTriggerLaunch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Coordinator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LaunchId != 0 {
		n += 1 + sovTx(uint64(m.LaunchId))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.LaunchTime)
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgTriggerLaunchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRevertLaunch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Coordinator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LaunchId != 0 {
		n += 1 + sovTx(uint64(m.LaunchId))
	}
	return n
}

func (m *MsgRevertLaunchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateChain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateChain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateChain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coordinator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenesisChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GenesisChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialGenesis", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.InitialGenesis.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasProject", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasProject = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
			}
			m.ProjectId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProjectId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountBalance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountBalance = append(m.AccountBalance, github_com_cosmos_cosmos_sdk_types.Coin{})
			if err := m.AccountBalance[len(m.AccountBalance)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = append(m.Metadata[:0], dAtA[iNdEx:postIndex]...)
			if m.Metadata == nil {
				m.Metadata = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateChainResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateChainResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateChainResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchId", wireType)
			}
			m.LaunchId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LaunchId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditChain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditChain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditChain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coordinator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchId", wireType)
			}
			m.LaunchId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LaunchId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetProjectId", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SetProjectId = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectId", wireType)
			}
			m.ProjectId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProjectId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = append(m.Metadata[:0], dAtA[iNdEx:postIndex]...)
			if m.Metadata == nil {
				m.Metadata = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditChainResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditChainResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditChainResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLaunchInformation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLaunchInformation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLaunchInformation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coordinator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchId", wireType)
			}
			m.LaunchId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LaunchId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenesisChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GenesisChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialGenesis", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.InitialGenesis == nil {
				m.InitialGenesis = &InitialGenesis{}
			}
			if err := m.InitialGenesis.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLaunchInformationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLaunchInformationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLaunchInformationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSendRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSendRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSendRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchId", wireType)
			}
			m.LaunchId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LaunchId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Content.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSendRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSendRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSendRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			m.RequestId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequestId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoApproved", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AutoApproved = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSettleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSettleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSettleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchId", wireType)
			}
			m.LaunchId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LaunchId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			m.RequestId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequestId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approve", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Approve = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSettleRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSettleRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSettleRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTriggerLaunch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTriggerLaunch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTriggerLaunch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coordinator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchId", wireType)
			}
			m.LaunchId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LaunchId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdDurationUnmarshal(&m.LaunchTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTriggerLaunchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTriggerLaunchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTriggerLaunchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevertLaunch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevertLaunch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevertLaunch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coordinator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Coordinator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LaunchId", wireType)
			}
			m.LaunchId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LaunchId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevertLaunchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevertLaunchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevertLaunchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
